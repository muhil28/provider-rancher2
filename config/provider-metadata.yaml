name: rancher/rancher2
resources:
    rancher2_app:
        subCategory: ""
        name: rancher2_app
        title: rancher2_app Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "answers": {
                    "foo": "bar",
                    "ingress.annotations.nginx.ingress.kubernetes.io/force-ssl-redirect": true,
                    "ingress_host": "test.xip.io"
                  },
                  "catalog_name": "\u003ccatalog_name\u003e",
                  "description": "Foo app",
                  "name": "foo",
                  "project_id": "project_id",
                  "target_namespace": "namespace_name",
                  "template_name": "template_name",
                  "template_version": "template_version"
                }
            - name: foo
              manifest: |-
                {
                  "answers": {
                    "foo": "bar",
                    "ingress.annotations.nginx.ingress.kubernetes.io/force-ssl-redirect": true,
                    "ingress_host": "test.xip.io"
                  },
                  "catalog_name": "\u003ccatalog_name\u003e",
                  "description": "Foo app",
                  "name": "foo",
                  "project_id": "\u003cproject_id\u003e",
                  "target_namespace": "${rancher2_namespace.foo.id}",
                  "template_name": "\u003ctemplate_name\u003e",
                  "template_version": "\u003ctemplate_version\u003e"
                }
              references:
                target_namespace: rancher2_namespace.foo.id
              dependencies:
                rancher2_namespace.foo: |-
                    {
                      "description": "Foo namespace",
                      "name": "foo",
                      "project_id": "\u003cproject_id\u003e",
                      "resource_quota": [
                        {
                          "limit": [
                            {
                              "limits_cpu": "100m",
                              "limits_memory": "100Mi",
                              "requests_storage": "1Gi"
                            }
                          ]
                        }
                      ]
                    }
        argumentDocs:
            Rollback: ': If revision_id argument is provided or modified the app will be rolled back accordingly. A new revision_id will be generated in Rancher. It will also generate a non-empty terraform plan that will require manual .tf file intervention. Use carefully.'
            Update: ': If description, annotations or labels arguments are modified the app will be updated. No new revision_id will be generated in Rancher.'
            Upgrade: ': If answers, catalog_name, template_name, template_version or values_yaml arguments are modified, the app will be upgraded. A new revision_id will be generated in Rancher.'
            annotations: '- (Optional/Computed) Annotations for App object (map)'
            answers: '- (Optional) Answers for the app template. If modified, app will be upgraded (map)'
            catalog_name: '- (Required) Catalog name of the app. If modified, app will be upgraded. For use scoped catalogs:'
            create: '- (Default 10 minutes) Used for creating apps.'
            delete: '- (Default 10 minutes) Used for deleting apps.'
            description: '- (Optional/Computed) Description for the app (string)'
            external_id: '- (Computed) The url of the app template on a catalog (string)'
            force_upgrade: '- (Optional) Force app upgrade (string)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels for App object (map)'
            local:<name>: or c-XXXXX:<name>
            name: '- (Required/ForceNew) The name of the app (string)'
            project_id: '- (Required/ForceNew) The project id where the app will be installed (string)'
            revision_id: '- (Optional/Computed) Current revision id for the app. If modified, If this argument is provided or modified, app will be rollbacked to revision_id (string)'
            target_namespace: '- (Required/ForceNew) The namespace id where the app will be installed (string)'
            template_name: '- (Required) Template name of the app. If modified, app will be upgraded (string)'
            template_version: '- (Optional/Computed) Template version of the app. If modified, app will be upgraded. Default: latest (string)'
            update: '- (Default 10 minutes) Used for app modifications.'
            values_yaml: '- (Optional) values.yaml base64 encoded file content for the app template. If modified, app will be upgraded (string)'
            wait: '- (Optional) Wait until app is deployed and active. Default: true (bool)'
        importStatements: []
    rancher2_auth_config_adfs:
        subCategory: ""
        name: rancher2_auth_config_adfs
        title: rancher2_auth_config_adfs Resource
        examples:
            - name: adfs
              manifest: |-
                {
                  "display_name_field": "\u003cDISPLAY_NAME_FIELD\u003e",
                  "groups_field": "\u003cGROUPS_FIELD\u003e",
                  "idp_metadata_content": "\u003cIDP_METADATA_CONTENT\u003e",
                  "rancher_api_host": "https://\u003cRANCHER_API_HOST\u003e",
                  "sp_cert": "\u003cSP_CERT\u003e",
                  "sp_key": "\u003cSP_KEY\u003e",
                  "uid_field": "\u003cUID_FIELD\u003e",
                  "user_name_field": "\u003cUSER_NAME_FIELD\u003e"
                }
        argumentDocs:
            access_mode: '- (Optional) Access mode for auth. required, restricted, unrestricted are supported. Default unrestricted (string)'
            allowed_principal_ids: '- (Optional) Allowed principal ids for auth. Required if access_mode is required or restricted. Ex: adfs_user://<USER_ID>  adfs_group://<GROUP_ID> (list)'
            annotations: '- (Optional/Computed) Annotations of the resource (map)'
            display_name_field: '- (Required) ADFS display name field (string)'
            enabled: '- (Optional) Enable auth config provider. Default true (bool)'
            groups_field: '- (Required) ADFS group field (string)'
            id: '- (Computed) The ID of the resource (string)'
            idp_metadata_content: '- (Required/Sensitive) ADFS IDP metadata content (string)'
            labels: '- (Optional/Computed) Labels of the resource (map)'
            name: '- (Computed) The name of the resource (string)'
            rancher_api_host: '- (Required) Rancher URL. URL scheme needs to be specified, https://<RANCHER_API_HOST> (string)'
            sp_cert: '- (Required/Sensitive) ADFS SP cert (string)'
            sp_key: '- (Required/Sensitive) ADFS SP key (string)'
            type: '- (Computed) The type of the resource (string)'
            uid_field: '- (Required) ADFS UID field (string)'
            user_name_field: '- (Required) ADFS user name field (string)'
        importStatements: []
    rancher2_auth_config_azuread:
        subCategory: ""
        name: rancher2_auth_config_azuread
        title: rancher2_auth_config_azuread Resource
        examples:
            - name: azuread
              manifest: |-
                {
                  "application_id": "\u003cAZUREAD_APP_ID\u003e",
                  "application_secret": "\u003cAZUREAD_APP_SECRET\u003e",
                  "auth_endpoint": "\u003cAZUREAD_AUTH_ENDPOINT\u003e",
                  "graph_endpoint": "\u003cAZUREAD_GRAPH_ENDPOINT\u003e",
                  "rancher_url": "\u003cRANCHER_URL\u003e",
                  "tenant_id": "\u003cAZUREAD_TENANT_ID\u003e",
                  "token_endpoint": "\u003cAZUREAD_TOKEN_ENDPOINT\u003e"
                }
        argumentDocs:
            access_mode: '- (Optional) Access mode for auth. required, restricted, unrestricted are supported. Default unrestricted (string)'
            allowed_principal_ids: '- (Optional) Allowed principal ids for auth. Required if access_mode is required or restricted. Ex: azuread_user://<USER_ID>  azuread_group://<GROUP_ID> (list)'
            annotations: '- (Optional/Computed) Annotations of the resource (map)'
            application_id: '- (Required/Sensitive) AzureAD auth application ID (string)'
            application_secret: '- (Required/Sensitive) AzureAD auth application secret (string)'
            auth_endpoint: '- (Required) AzureAD auth endpoint (string)'
            enabled: '- (Optional) Enable auth config provider. Default true (bool)'
            endpoint: '- (Optional) AzureAD endpoint. Default https://login.microsoftonline.com/ (string)'
            graph_endpoint: '- (Required) AzureAD graph endpoint (string)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels of the resource (map)'
            name: '- (Computed) The name of the resource (string)'
            rancher_url: '- (Required) Rancher URL (string). "<rancher_url>/verify-auth-azure"'
            tenant_id: '- (Required) AzureAD tenant ID (string)'
            tls: '- (Optional) Enable TLS connection. Default true (bool)'
            token_endpoint: '- (Required) AzureAD token endpoint (string)'
            type: '- (Computed) The type of the resource (string)'
        importStatements: []
    rancher2_auth_config_github:
        subCategory: ""
        name: rancher2_auth_config_github
        title: rancher2_auth_config_github Resource
        examples:
            - name: github
              manifest: |-
                {
                  "client_id": "\u003cGITHUB_CLIENT_ID\u003e",
                  "client_secret": "\u003cGITHUB_CLIENT_SECRET\u003e"
                }
        argumentDocs:
            access_mode: '- (Optional) Access mode for auth. required, restricted, unrestricted are supported. Default unrestricted (string)'
            allowed_principal_ids: '- (Optional) Allowed principal ids for auth. Required if access_mode is required or restricted. Ex: github_user://<USER_ID>  github_team://<GROUP_ID> github_org://<ORG_ID> (list)'
            annotations: '- (Optional/Computed) Annotations of the resource (map)'
            client_id: '- (Required/Sensitive) Github auth Client ID (string)'
            client_secret: '- (Required/Sensitive) Github auth Client secret (string)'
            enabled: '- (Optional) Enable auth config provider. Default true (bool)'
            hostname: '- (Optional) Github hostname to connect. Default github.com (string)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels of the resource (map)'
            name: '- (Computed) The name of the resource (string)'
            tls: '- (Optional) Enable TLS connection. Default true (bool)'
            type: '- (Computed) The type of the resource (string)'
        importStatements: []
    rancher2_auth_config_keycloak:
        subCategory: ""
        name: rancher2_auth_config_keycloak
        title: rancher2_auth_config_keycloak Resource
        examples:
            - name: keycloak
              manifest: |-
                {
                  "display_name_field": "\u003cDISPLAY_NAME_FIELD\u003e",
                  "groups_field": "\u003cGROUPS_FIELD\u003e",
                  "idp_metadata_content": "\u003cIDP_METADATA_CONTENT\u003e",
                  "rancher_api_host": "https://\u003cRANCHER_API_HOST\u003e",
                  "sp_cert": "\u003cSP_CERT\u003e",
                  "sp_key": "\u003cSP_KEY\u003e",
                  "uid_field": "\u003cUID_FIELD\u003e",
                  "user_name_field": "\u003cUSER_NAME_FIELD\u003e"
                }
        argumentDocs:
            access_mode: '- (Optional) Access mode for auth. required, restricted, unrestricted are supported. Default unrestricted (string)'
            allowed_principal_ids: '- (Optional) Allowed principal ids for auth. Required if access_mode is required or restricted. Ex: keycloak_user://<USER_ID>  keycloak_group://<GROUP_ID> (list)'
            annotations: '- (Optional/Computed) Annotations of the resource (map)'
            display_name_field: '- (Required) KeyCloak display name field (string)'
            enabled: '- (Optional) Enable auth config provider. Default true (bool)'
            entity_id: '- (Optional/Computed) KeyCloak Client ID field (string)'
            groups_field: '- (Required) KeyCloak group field (string)'
            id: '- (Computed) The ID of the resource (string)'
            idp_metadata_content: '- (Required/Sensitive) KeyCloak IDP metadata content (string)'
            labels: '- (Optional/Computed) Labels of the resource (map)'
            name: '- (Computed) The name of the resource (string)'
            rancher_api_host: '- (Required) Rancher URL. URL scheme needs to be specified, https://<RANCHER_API_HOST> (string)'
            sp_cert: '- (Required/Sensitive) KeyCloak SP cert (string)'
            sp_key: '- (Required/Sensitive) KeyCloak SP key (string)'
            type: '- (Computed) The type of the resource (string)'
            uid_field: '- (Required) KeyCloak UID field (string)'
            user_name_field: '- (Required) KeyCloak user name field (string)'
        importStatements: []
    rancher2_auth_config_okta:
        subCategory: ""
        name: rancher2_auth_config_okta
        title: rancher2_auth_config_okta Resource
        examples:
            - name: okta
              manifest: |-
                {
                  "display_name_field": "\u003cDISPLAY_NAME_FIELD\u003e",
                  "groups_field": "\u003cGROUPS_FIELD\u003e",
                  "idp_metadata_content": "\u003cIDP_METADATA_CONTENT\u003e",
                  "rancher_api_host": "https://\u003cRANCHER_API_HOST\u003e",
                  "sp_cert": "\u003cSP_CERT\u003e",
                  "sp_key": "\u003cSP_KEY\u003e",
                  "uid_field": "\u003cUID_FIELD\u003e",
                  "user_name_field": "\u003cUSER_NAME_FIELD\u003e"
                }
        argumentDocs:
            access_mode: '- (Optional) Access mode for auth. required, restricted, unrestricted are supported. Default unrestricted (string)'
            allowed_principal_ids: '- (Optional) Allowed principal ids for auth. Required if access_mode is required or restricted. Ex: okta_user://<USER_ID>  okta_group://<GROUP_ID> (list)'
            annotations: '- (Optional/Computed) Annotations of the resource (map)'
            display_name_field: '- (Required) OKTA display name field (string)'
            enabled: '- (Optional) Enable auth config provider. Default true (bool)'
            groups_field: '- (Required) OKTA group field (string)'
            id: '- (Computed) The ID of the resource (string)'
            idp_metadata_content: '- (Required/Sensitive) OKTA IDP metadata content (string)'
            labels: '- (Optional/Computed) Labels of the resource (map)'
            name: '- (Computed) The name of the resource (string)'
            rancher_api_host: '- (Required) Rancher URL. URL scheme needs to be specified, https://<RANCHER_API_HOST> (string)'
            sp_cert: '- (Required/Sensitive) OKTA SP cert (string)'
            sp_key: '- (Required/Sensitive) OKTA SP key (string)'
            type: '- (Computed) The type of the resource (string)'
            uid_field: '- (Required) OKTA UID field (string)'
            user_name_field: '- (Required) OKTA user name field (string)'
        importStatements: []
    rancher2_auth_config_ping:
        subCategory: ""
        name: rancher2_auth_config_ping
        title: rancher2_auth_config_ping Resource
        examples:
            - name: ping
              manifest: |-
                {
                  "display_name_field": "\u003cDISPLAY_NAME_FIELD\u003e",
                  "groups_field": "\u003cGROUPS_FIELD\u003e",
                  "idp_metadata_content": "\u003cIDP_METADATA_CONTENT\u003e",
                  "rancher_api_host": "https://\u003cRANCHER_API_HOST\u003e",
                  "sp_cert": "\u003cSP_CERT\u003e",
                  "sp_key": "\u003cSP_KEY\u003e",
                  "uid_field": "\u003cUID_FIELD\u003e",
                  "user_name_field": "\u003cUSER_NAME_FIELD\u003e"
                }
        argumentDocs:
            access_mode: '- (Optional) Access mode for auth. required, restricted, unrestricted are supported. Default unrestricted (string)'
            allowed_principal_ids: '- (Optional) Allowed principal ids for auth. Required if access_mode is required or restricted. Ex: ping_user://<USER_ID>  ping_group://<GROUP_ID> (list)'
            annotations: '- (Optional/Computed) Annotations of the resource (map)'
            display_name_field: '- (Required) Ping display name field (string)'
            enabled: '- (Optional) Enable auth config provider. Default true (bool)'
            entity_id_field: '- (Optional) Ping entity ID field (string)'
            groups_field: '- (Required) Ping group field (string)'
            id: '- (Computed) The ID of the resource (string)'
            idp_metadata_content: '- (Required/Sensitive) Ping IDP metadata content (string)'
            labels: '- (Optional/Computed) Labels of the resource (map)'
            name: '- (Computed) The name of the resource (string)'
            rancher_api_host: '- (Required) Rancher URL. URL scheme needs to be specified, https://<RANCHER_API_HOST> (string)'
            sp_cert: '- (Required/Sensitive) Ping SP cert (string)'
            sp_key: '- (Required/Sensitive) Ping SP key (string)'
            type: '- (Computed) The type of the resource (string)'
            uid_field: '- (Required) Ping UID field (string)'
            user_name_field: '- (Required) Ping user name field (string)'
        importStatements: []
    rancher2_bootstrap:
        subCategory: ""
        name: rancher2_bootstrap
        title: rancher2_bootstrap Resource
        examples:
            - name: admin
              manifest: |-
                {
                  "password": "blahblah",
                  "telemetry": true
                }
            - name: admin
              manifest: |-
                {
                  "initial_password": "\u003cINSTALL_PASSWORD\u003e",
                  "password": "blahblah",
                  "telemetry": true
                }
            - name: admin
              manifest: |-
                {
                  "password": "blahblah",
                  "provider": "rancher2.bootstrap",
                  "telemetry": true
                }
        argumentDocs:
            current_password: '- (Computed/Sensitive) Current password for Admin user (string)'
            id: '- (Computed) The ID of the resource (string)'
            initial_password: '- (Optional/Computed/Sensitive) Initial password for Admin user. Default: admin (string)'
            password: or generating a random one.
            server-url: setting, based on api_url.
            telemetry: '- (Optional) Send telemetry anonymous data. Default: false (bool)'
            telemetry-opt: setting.
            temp_token: '- (Computed) Generated API temporary token as helper. Should be empty (string)'
            temp_token_id: '- (Computed) Generated API temporary token id as helper. Should be empty (string)'
            token: '- (Computed) Generated API token for Admin User (string)'
            token_id: '- (Computed) Generated API token id for Admin User (string)'
            token_ttl: '- (Optional) TTL in seconds for generated admin token. Default: 0  (int)'
            token_update: '- (Optional) Regenerate admin token. Default: false (bool)'
            ui_default_landing: '- (Optional) Default UI landing for k8s clusters. Available options: ember (cluster manager ui)  and vue (cluster explorer ui). Default: ember (string)'
            url: '- (Computed) URL set as server-url (string)'
            user: '- (Computed) Admin username (string)'
        importStatements: []
    rancher2_catalog:
        subCategory: ""
        name: rancher2_catalog
        title: rancher2_catalog Resource
        examples:
            - name: foo-global
              manifest: |-
                {
                  "name": "foo-global",
                  "url": "https://\u003cCATALOG_URL\u003e"
                }
            - name: foo-cluster
              manifest: |-
                {
                  "name": "foo-cluster",
                  "scope": "cluster",
                  "url": "https://\u003cCATALOG_URL\u003e"
                }
            - name: foo-project
              manifest: |-
                {
                  "name": "foo-project",
                  "scope": "project",
                  "url": "https://\u003cCATALOG_URL\u003e"
                }
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations for the catalog (map)'
            branch: '- (Optional) The branch of the catalog repo to use. Default master (string)'
            cluster_id: '- (Optional/ForceNew) The cluster id of the catalog. Mandatory if scope = cluster (string)'
            create: '- (Default 10 minutes) Used for creating catalogs.'
            delete: '- (Default 10 minutes) Used for deleting catalogs.'
            description: '- (Optional) A catalog description (string)'
            id: '- (Computed) The ID of the resource (string)'
            kind: '- (Optional) The kind of the catalog. Just helm by the moment (string)'
            labels: '- (Optional/Computed) Labels for the catalog (map)'
            name: '- (Required) The name of the catalog (string)'
            password: '- (Optional/Sensitive) The password to access the catalog if needed (string)'
            project_id: '- (Optional/ForceNew) The project id of the catalog. Mandatory if scope = project (string)'
            refresh: '- (Optional) Catalog will wait for refresh after tf creation and on every tf read. Default false (bool)'
            scope: '- (Optional) The scope of the catalog. cluster, global, and project are supported. Default global (string)'
            update: '- (Default 10 minutes) Used for catalog modifications.'
            url: '- (Required) The url of the catalog repo (string)'
            username: '- (Optional/Sensitive) The username to access the catalog if needed (string)'
            version: '- (Optional/ForceNew/Computed) Helm version for the catalog. Available options: helm_v2 and helm_v3 (string)'
        importStatements: []
    rancher2_catalog_v2 Resource:
        subCategory: ""
        name: rancher2_catalog_v2 Resource
        title: rancher2_catalog_v2 Resource
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations for the app v2 (map)'
            chart_name: '- (Required) The app v2 chart name (string)'
            chart_version: '- (Optional/Computed) The app v2 chart version (string)'
            cleanup_on_fail: '- (Optional) Cleanup app v2 on failed chart upgrade. Default: false (bool)'
            cluster_id: '- (Required/ForceNew) The cluster id of the app (string)'
            cluster_name: '- (Computed) The cluster name of the app (string)'
            create: '- (Default 10 minutes) Used for creating Rancher v2 apps.'
            delete: '- (Default 10 minutes) Used for deleting Rancher v2 apps.'
            disable_hooks: '- (Optional) Disable app v2 chart hooks. Default: false (bool)'
            disable_open_api_validation: '- (Optional) Disable app V2 Open API Validation. Default: false (bool)'
            force_upgrade: '- (Optional) Force app V2 chart upgrade. Default: false (bool)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels for the app v2 (map)'
            name: '- (Required/ForceNew) The name of the app v2 (string)'
            namespace: '- (Required/ForceNew) The namespace of the app v2 (string)'
            project_id: '- (Optional) Deploy the app v2 within project ID (string)'
            repo_name: '- (Required) Repo name (string)'
            system_default_registry: '- (Optional/Computed) System default registry providing images for app deployment (string)'
            update: '- (Default 10 minutes) Used for Rancher v2 app modifications.'
            values: '- (Optional/Sensitive) The app v2 values yaml. Yaml format is required (string)'
            wait: '- (Optional) Wait until app is deployed. Default: true (bool)'
        importStatements: []
    rancher2_certificate:
        subCategory: ""
        name: rancher2_certificate
        title: rancher2_certificate Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "certs": "${base64encode(\u003cPUBLIC_CERTS\u003e)}",
                  "description": "Terraform certificate foo",
                  "key": "${base64encode(\u003cPRIVATE_KEY\u003e)}",
                  "name": "foo",
                  "project_id": "\u003cproject_id\u003e"
                }
            - name: foo
              manifest: |-
                {
                  "certs": "${base64encode(\u003cPUBLIC_CERTS\u003e)}",
                  "description": "Terraform certificate foo",
                  "key": "${base64encode(\u003cPRIVATE_KEY\u003e)}",
                  "name": "foo",
                  "namespace_id": "\u003cnamespace_id\u003e",
                  "project_id": "\u003cproject_id\u003e"
                }
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations for certificate object (map)'
            certs: '- (Required) Base64 encoded public certs (string)'
            create: '- (Default 10 minutes) Used for creating registries.'
            delete: '- (Default 10 minutes) Used for deleting registries.'
            description: '- (Optional) A certificate description (string)'
            id: '- (Computed) The ID of the resource (string)'
            key: '- (Required/Sensitive) Base64 encoded private key (string)'
            labels: '- (Optional/Computed) Labels for certificate object (map)'
            name: '- (Optional/ForceNew) The name of the certificate (string)'
            namespace_id: in the project_id
            project_id: '- (Required/ForceNew) The project id where the certificate should be created  (string)'
            update: '- (Default 10 minutes) Used for certificate modifications.'
        importStatements: []
    rancher2_cloud_credential:
        subCategory: ""
        name: rancher2_cloud_credential
        title: rancher2_cloud_credential Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "amazonec2_credential_config": [
                    {
                      "access_key": "\u003cAWS_ACCESS_KEY\u003e",
                      "secret_key": "\u003cAWS_SECRET_KEY\u003e"
                    }
                  ],
                  "description": "foo test",
                  "name": "foo"
                }
            - name: foo-harvester
              manifest: |-
                {
                  "harvester_credential_config": [
                    {
                      "cluster_id": "${data.rancher2_cluster_v2.foo-harvester.cluster_v1_id}",
                      "cluster_type": "imported",
                      "kubeconfig_content": "${data.rancher2_cluster_v2.foo-harvester.kube_config}"
                    }
                  ],
                  "name": "foo-harvester"
                }
              references:
                harvester_credential_config.cluster_id: data.rancher2_cluster_v2.foo-harvester.cluster_v1_id
                harvester_credential_config.kubeconfig_content: data.rancher2_cluster_v2.foo-harvester.kube_config
        argumentDocs:
            access_key: '- (Required/Sensitive) AWS access key (string)'
            access_token: '- (Required/Sensitive) DigitalOcean access token (string)'
            amazonec2_credential_config: '- (Optional) AWS config for the Cloud Credential (list maxitems:1)'
            annotations: '- (Optional) Annotations for Cloud Credential object (map)'
            auth_encoded_json: '- (Required/Sensitive) Google auth encoded json (string)'
            azure_credential_config: '- (Optional) Azure config for the Cloud Credential (list maxitems:1)'
            client_id: '- (Required/Sensitive) Azure Service Principal Account ID (string)'
            client_secret: '- (Required/Sensitive) Azure Service Principal Account password (string)'
            cluster_id: '- (Optional) Imported Harvester Cluster ID (string)'
            cluster_type: '- (Required) Harvester Cluster Type. Supported values : "imported" | "external" (string)'
            create: '- (Default 10 minutes) Used for creating cloud credentials.'
            default_bucket: '- (Optional) AWS default bucket (string)'
            default_endpoint: '- (Optional) AWS default endpoint (string)'
            default_endpoint_ca: '- (Optional/Sensitive) AWS default endpoint CA (string)'
            default_folder: '- (Optional) AWS default folder (string)'
            default_region: '- (Optional) AWS default region (string)'
            default_skip_ssl_verify: '- (Optional) AWS default skip ssl verify. Default: false (bool)'
            delete: '- (Default 10 minutes) Used for deleting cloud credentials.'
            description: '- (Optional) Description for the Cloud Credential (string)'
            digitalocean_credential_config: '- (Optional) DigitalOcean config for the Cloud Credential (list maxitems:1)'
            driver: '- (Computed) The driver of the Cloud Credential (string)'
            environment: '- (Optional/Computed) Azure environment (e.g. AzurePublicCloud, AzureChinaCloud) (string)'
            google_credential_config: '- (Optional) Google config for the Cloud Credential (list maxitems:1)'
            harvester_credential_config: '- (Optional) Harvester config for the Cloud Credential (list maxitems:1)'
            id: '- (Computed) The ID of the resource (string)'
            kubeconfig_content: '- (Required/Sensitive) Harvester Cluster KubeConfig Content (string)'
            labels: '- (Optional/Computed) Labels for Cloud Credential object (map)'
            linode_credential_config: '- (Optional) Linode config for the Cloud Credential (list maxitems:1)'
            name: '- (Required) The name of the Cloud Credential (string)'
            openstack_credential_config: '- (Optional) OpenStack config for the Cloud Credential (list maxitems:1)'
            password: '- (Required/Sensitive) OpenStack password (string)'
            s3_credential_config: '- (Optional) S3 config for the Cloud Credential. For Rancher 2.6.0 and above (list maxitems:1)'
            secret_key: '- (Required/Sensitive) AWS secret key (string)'
            subscription_id: '- (Required/Sensitive) Azure Subscription ID (string)'
            tenant_id: '- (Optional/Computed) Azure Tenant ID (string)'
            token: '- (Required/Sensitive) Linode API token (string)'
            update: '- (Default 10 minutes) Used for cloud credential modifications.'
            username: '- (Required) vSphere username (string)'
            vcenter: '- (Required) vSphere IP/hostname for vCenter (string)'
            vcenter_port: '- (Optional) vSphere Port for vCenter. Default 443 (string)'
            vsphere_credential_config: '- (Optional) vSphere config for the Cloud Credential (list maxitems:1)'
        importStatements: []
    rancher2_cluster_driver:
        subCategory: ""
        name: rancher2_cluster_driver
        title: rancher2_cluster_driver Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "active": true,
                  "builtin": false,
                  "checksum": "0x0",
                  "description": "Foo description",
                  "external_id": "foo_external",
                  "name": "foo",
                  "ui_url": "local://ui",
                  "url": "local://",
                  "whitelist_domains": [
                    "*.foo.com"
                  ]
                }
        argumentDocs:
            active: '- (Required) Specify the cluster driver state (bool)'
            actual_url: '- (Optional) Actual url of the cluster driver (string)'
            annotations: '- (Optional/Computed) Annotations of the resource (map)'
            builtin: '- (Required) Specify whether the cluster driver is an internal cluster driver or not (bool)'
            checksum: '- (Optional) Verify that the downloaded driver matches the expected checksum (string)'
            create: '- (Default 10 minutes) Used for creating cluster drivers.'
            delete: '- (Default 10 minutes) Used for deleting cluster drivers.'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels of the resource (map)'
            name: '- (Required) Name of the cluster driver (string)'
            ui_url: '- (Optional) The URL to load for customized Add Clusters screen for this driver (string)'
            update: '- (Default 10 minutes) Used for cluster driver modifications.'
            url: '- (Required) The URL to download the machine driver binary for 64-bit Linux (string)'
            whitelist_domains: '- (Optional) Domains to whitelist for the ui (list)'
        importStatements: []
    rancher2_cluster_role_template_binding:
        subCategory: ""
        name: rancher2_cluster_role_template_binding
        title: rancher2_cluster_role_template_binding Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "cluster_id": "\u003ccluster_id\u003e",
                  "name": "foo",
                  "role_template_id": "\u003crole_template_id\u003e",
                  "user_id": "\u003cuser_id\u003e"
                }
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations for cluster role template binding (map)'
            cluster_id: '- (Required/ForceNew) The cluster id where bind cluster role template binding (string)'
            create: '- (Default 10 minutes) Used for creating cluster role template bindings.'
            delete: '- (Default 10 minutes) Used for deleting cluster role template bindings.'
            group_id: '- (Optional/Computed/ForceNew) The group ID to assign cluster role template binding (string)'
            group_principal_id: '- (Optional/Computed/ForceNew) The group_principal ID to assign cluster role template binding (string)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels for cluster role template binding (map)'
            name: '- (Required/ForceNew) The name of the cluster role template binding (string)'
            role_template_id: '- (Required/ForceNew) The role template id from create cluster role template binding (string)'
            update: '- (Default 10 minutes) Used for cluster role template binding modifications.'
            user_id: '- (Optional/Computed/ForceNew) The user ID to assign cluster role template binding (string)'
            user_principal_id: '- (Optional/Computed/ForceNew) The user_principal ID to assign cluster role template binding (string)'
        importStatements: []
    rancher2_cluster_sync:
        subCategory: ""
        name: rancher2_cluster_sync
        title: rancher2_cluster_sync Resource
        examples:
            - name: foo-custom
              manifest: |-
                {
                  "cluster_id": "${rancher2_cluster.foo-custom.id}",
                  "node_pool_ids": [
                    "${rancher2_node_pool.foo.id}"
                  ]
                }
              references:
                cluster_id: rancher2_cluster.foo-custom.id
              dependencies:
                rancher2_cluster.foo-custom: |-
                    {
                      "description": "Foo rancher2 custom cluster",
                      "name": "foo-custom",
                      "rke_config": [
                        {
                          "network": [
                            {
                              "plugin": "canal"
                            }
                          ]
                        }
                      ]
                    }
                rancher2_node_pool.foo: |-
                    {
                      "cluster_id": "${rancher2_cluster.foo-custom.id}",
                      "control_plane": true,
                      "etcd": true,
                      "hostname_prefix": "foo-cluster-0",
                      "name": "foo",
                      "node_template_id": "${rancher2_node_template.foo.id}",
                      "quantity": 3,
                      "worker": true
                    }
                rancher2_node_template.foo: |-
                    {
                      "amazonec2_config": [
                        {
                          "access_key": "\u003cAWS_ACCESS_KEY\u003e",
                          "ami": "\u003cAMI_ID\u003e",
                          "region": "\u003cREGION\u003e",
                          "secret_key": "\u003cAWS_SECRET_KEY\u003e",
                          "security_group": [
                            "\u003cAWS_SECURITY_GROUP\u003e"
                          ],
                          "subnet_id": "\u003cSUBNET_ID\u003e",
                          "vpc_id": "\u003cVPC_ID\u003e",
                          "zone": "\u003cZONE\u003e"
                        }
                      ],
                      "description": "foo test",
                      "name": "foo"
                    }
                rancher2_project.foo: |-
                    {
                      "cluster_id": "${rancher2_cluster_sync.foo-custom.id}",
                      "container_resource_limit": [
                        {
                          "limits_cpu": "20m",
                          "limits_memory": "20Mi",
                          "requests_cpu": "1m",
                          "requests_memory": "1Mi"
                        }
                      ],
                      "description": "Terraform namespace acceptance test",
                      "name": "foo",
                      "resource_quota": [
                        {
                          "namespace_default_limit": [
                            {
                              "limits_cpu": "500m",
                              "limits_memory": "500Mi",
                              "requests_storage": "1Gi"
                            }
                          ],
                          "project_limit": [
                            {
                              "limits_cpu": "2000m",
                              "limits_memory": "2000Mi",
                              "requests_storage": "2Gi"
                            }
                          ]
                        }
                      ]
                    }
        argumentDocs:
            annotations: '- (Computed) Annotations of the node (map).'
            capacity: '- (Computed) The total resources of a node (map).'
            cluster_id: '- (Required/ForceNew) The cluster ID that is syncing (string)'
            create: '- (Default 30 minutes) Used for creating cluster sync.'
            default_project_id: '- (Computed) Default project ID for the cluster sync (string)'
            delete: '- (Default 30 minutes) Used for deleting cluster sync.'
            external_ip_address: '- (Computed)  The external IP address of the node (string).'
            hostname: '- (Computed) The hostname of the node (string).'
            id: '- (Computed) The ID of the resource. Same as cluster_id (string)'
            ip_address: '- (Computed) The private IP address of the node (string).'
            kube_config: '- (Computed/Sensitive) Kube Config generated for the cluster sync (string)'
            labels: '- (Computed) Labels of the node (map).'
            name: '- (Computed) The name of the node (string).'
            node_pool_id: '- (Computed) The Node Pool ID of the node (string).'
            node_pool_ids: '- (Optional) The node pool IDs used by the cluster id (list)'
            node_template_id: '- (Computed) The Node Template ID of the node (string).'
            nodes: '- (Computed) The cluster nodes (list).'
            provider_id: '- (Computed) The Provider ID of the node (string).'
            requested_hostname: '- (Computed) The requested hostname (string).'
            roles: '- (Computed) Roles of the node. controlplane, etcd and worker. (list)'
            ssh_user: '- (Computed/Sensitive) The user to connect to the node (string).'
            state_confirm: '- (Optional) Wait until active status is confirmed a number of times (wait interval of 5s). Default: 1 means no confirmation (int)'
            system_info: '- (Computed) General information about the node, such as kernel version, kubelet and kube-proxy version, Docker version (if used), and OS name.'
            system_info.container_runtime_version: '- (Computed) ContainerRuntime Version reported by the node through runtime remote API (e.g. docker://1.5.0).'
            system_info.kernel_version: '- (Computed) Kernel Version reported by the node from ''uname -r'' (e.g. 3.16.0-0.bpo.4-amd64).'
            system_info.kube_proxy_version: '- (Computed) KubeProxy Version reported by the node.'
            system_info.kubelet_version: '- (Computed) Kubelet Version reported by the node.'
            system_info.operating_system: '- (Computed) The Operating System reported by the node.'
            system_project_id: '- (Computed) System project ID for the cluster sync (string)'
            update: '- (Default 30 minutes) Used for cluster sync modifications.'
            wait_catalogs: '- (Optional) Wait until all catalogs are downloaded and active. Default: false (bool)'
        importStatements: []
    rancher2_cluster_template:
        subCategory: ""
        name: rancher2_cluster_template
        title: rancher2_cluster_template Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "Terraform cluster template foo",
                  "members": [
                    {
                      "access_type": "owner",
                      "user_principal_id": "local://user-XXXXX"
                    }
                  ],
                  "name": "foo",
                  "template_revisions": [
                    {
                      "cluster_config": [
                        {
                          "rke_config": [
                            {
                              "network": [
                                {
                                  "plugin": "canal"
                                }
                              ],
                              "services": [
                                {
                                  "etcd": [
                                    {
                                      "creation": "6h",
                                      "retention": "24h"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "default": true,
                      "name": "V1"
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "description": "Terraform cluster template foo",
                  "members": [
                    {
                      "access_type": "owner",
                      "user_principal_id": "local://user-XXXXX"
                    }
                  ],
                  "name": "foo",
                  "template_revisions": [
                    {
                      "cluster_config": [
                        {
                          "rke_config": [
                            {
                              "network": [
                                {
                                  "plugin": "canal"
                                }
                              ],
                              "services": [
                                {
                                  "etcd": [
                                    {
                                      "creation": "6h",
                                      "retention": "24h"
                                    }
                                  ]
                                }
                              ],
                              "upgrade_strategy": [
                                {
                                  "drain": true,
                                  "max_unavailable_worker": "20%"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "default": true,
                      "name": "V1"
                    }
                  ]
                }
        argumentDocs:
            access_type: '- (Optional) Member access type. Valid values: ["read-only" | "owner"] (string)'
            annotations: '- (Optional/Computed) Annotations for the cluster template (map)'
            cluster_auth_endpoint: '- (Optional/Computed) Local cluster auth endpoint (list maxitems: 1)'
            cluster_config: '- (Required) Cluster configuration (list maxitem: 1)'
            cluster_template_id: '- (Computed) Cluster template ID (string)'
            create: '- (Default 10 minutes) Used for creating cluster templates.'
            decription: '- (Optional) The cluster template description (string)'
            default: '- (Optional) Default cluster template revision. Default false (bool)'
            default_cluster_role_for_project_members: '- (Optional/Computed) Default cluster role for project members (string)'
            default_revision_id: '- (Computed) Default cluster template revision ID (string)'
            delete: '- (Default 10 minutes) Used for deleting cluster templates.'
            desired_agent_image: '- (Optional/Computed) Desired agent image (string)'
            desired_auth_image: '- (Optional/Computed) Desired auth image (string)'
            docker_root_dir: '- (Optional/Computed) Desired auth image (string)'
            enable_network_policy: '- (Optional) Enable project network isolation. Default: false (bool)'
            enabled: '- (Optional) Enable cluster template revision. Default true (bool)'
            group_principal_id: '- (Optional) Member group principal id (string)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels for the cluster template (map)'
            members: '- (Optional) Cluster template members (list)'
            name: '- (Required) The cluster template name (string)'
            questions: '- (Optional) Cluster template questions (list)'
            required: '- (Optional) Required variable. Default false (bool)'
            rke_config: '- (Required) Rancher Kubernetes Engine Config (list maxitems: 1)'
            template_revisions: '- (Optional/Computed) Cluster template revisions (list)'
            type: '- (Optional) Variable type. boolean, int and string are allowed. Default string (string)'
            update: '- (Default 10 minutes) Used for cluster template modifications.'
            user_principal_id: '- (Optional) Member user principal id (string)'
            variable: '- (Optional) Variable name (string)'
            windows_prefered_cluster: '- (Optional) Windows prefered cluster. Default: false (bool)'
        importStatements: []
    rancher2_cluster_v2:
        subCategory: ""
        name: rancher2_cluster_v2
        title: rancher2_cluster_v2 Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "kubernetes_version": "rke2-/k3s-version",
                  "name": "foo"
                }
            - name: foo
              manifest: |-
                {
                  "enable_network_policy": false,
                  "kubernetes_version": "rke2/k3s-version",
                  "name": "foo",
                  "rke_config": [
                    {
                      "machine_pools": [
                        {
                          "cloud_credential_secret_name": "${rancher2_cloud_credential.foo.id}",
                          "control_plane_role": true,
                          "drain_before_delete": true,
                          "etcd_role": true,
                          "machine_config": [
                            {
                              "kind": "${rancher2_machine_config_v2.foo.kind}",
                              "name": "${rancher2_machine_config_v2.foo.name}"
                            }
                          ],
                          "name": "pool1",
                          "quantity": 1,
                          "worker_role": false
                        },
                        {
                          "cloud_credential_secret_name": "${rancher2_cloud_credential.foo.id}",
                          "control_plane_role": false,
                          "drain_before_delete": true,
                          "etcd_role": false,
                          "machine_config": [
                            {
                              "kind": "${rancher2_machine_config_v2.foo.kind}",
                              "name": "${rancher2_machine_config_v2.foo.name}"
                            }
                          ],
                          "name": "pool2",
                          "quantity": 2,
                          "worker_role": true
                        }
                      ]
                    }
                  ]
                }
              references:
                rke_config.machine_pools.cloud_credential_secret_name: rancher2_cloud_credential.foo.id
                rke_config.machine_pools.machine_config.kind: rancher2_machine_config_v2.foo.kind
                rke_config.machine_pools.machine_config.name: rancher2_machine_config_v2.foo.name
            - name: foo-k3s
              manifest: |-
                {
                  "enable_network_policy": false,
                  "kubernetes_version": "rke2/k3s-version",
                  "name": "foo-k3s",
                  "rke_config": [
                    {
                      "machine_pools": [
                        {
                          "cloud_credential_secret_name": "${rancher2_cloud_credential.foo.id}",
                          "control_plane_role": true,
                          "etcd_role": true,
                          "machine_config": [
                            {
                              "kind": "${rancher2_machine_config_v2.foo.kind}",
                              "name": "${rancher2_machine_config_v2.foo.name}"
                            }
                          ],
                          "name": "pool",
                          "quantity": 1,
                          "worker_role": true
                        }
                      ]
                    }
                  ]
                }
              references:
                rke_config.machine_pools.cloud_credential_secret_name: rancher2_cloud_credential.foo.id
                rke_config.machine_pools.machine_config.kind: rancher2_machine_config_v2.foo.kind
                rke_config.machine_pools.machine_config.name: rancher2_machine_config_v2.foo.name
            - name: foo-harvester-v2
              manifest: |-
                {
                  "kubernetes_version": "\u003crke2/k3s-version\u003e",
                  "name": "foo-harvester-v2",
                  "rke_config": [
                    {
                      "etcd": [
                        {
                          "snapshot_retention": 5,
                          "snapshot_schedule_cron": "0 */5 * * *"
                        }
                      ],
                      "machine_global_config": "cni: \"calico\"\ndisable-kube-proxy: false\netcd-expose-metrics: false\n",
                      "machine_pools": [
                        {
                          "cloud_credential_secret_name": "${rancher2_cloud_credential.foo-harvester.id}",
                          "control_plane_role": true,
                          "etcd_role": true,
                          "machine_config": [
                            {
                              "kind": "${rancher2_machine_config_v2.foo-harvester-v2.kind}",
                              "name": "${rancher2_machine_config_v2.foo-harvester-v2.name}"
                            }
                          ],
                          "name": "pool1",
                          "quantity": 1,
                          "worker_role": true
                        }
                      ],
                      "machine_selector_config": [
                        {
                          "config": {
                            "cloud-provider-name": ""
                          }
                        }
                      ],
                      "upgrade_strategy": [
                        {
                          "control_plane_concurrency": "10%",
                          "worker_concurrency": "10%"
                        }
                      ]
                    }
                  ]
                }
              references:
                rke_config.machine_pools.cloud_credential_secret_name: rancher2_cloud_credential.foo-harvester.id
                rke_config.machine_pools.machine_config.kind: rancher2_machine_config_v2.foo-harvester-v2.kind
                rke_config.machine_pools.machine_config.name: rancher2_machine_config_v2.foo-harvester-v2.name
              dependencies:
                rancher2_cloud_credential.foo-harvester: |-
                    {
                      "harvester_credential_config": [
                        {
                          "cluster_id": "${data.rancher2_cluster_v2.foo-harvester.cluster_v1_id}",
                          "cluster_type": "imported",
                          "kubeconfig_content": "${data.rancher2_cluster_v2.foo-harvester.kube_config}"
                        }
                      ],
                      "name": "foo-harvester"
                    }
                rancher2_machine_config_v2.foo-harvester-v2: |-
                    {
                      "generate_name": "foo-harvester-v2",
                      "harvester_config": [
                        {
                          "cpu_count": "2",
                          "disk_info": "    {\n        \"disks\": [{\n            \"imageName\": \"harvester-public/image-57hzg\",\n            \"size\": 40,\n            \"bootOrder\": 1\n        }]\n    }\n",
                          "memory_size": "4",
                          "network_info": "    {\n        \"interfaces\": [{\n            \"networkName\": \"harvester-public/vlan1\"\n        }]\n    }\n",
                          "ssh_user": "ubuntu",
                          "user_data": "    package_update: true\n    packages:\n      - qemu-guest-agent\n      - iptables\n    runcmd:\n      - - systemctl\n        - enable\n        - '--now'\n        - qemu-guest-agent.service\n",
                          "vm_namespace": "default"
                        }
                      ]
                    }
            - name: foo-harvester-v2-cloud-provider
              manifest: |-
                {
                  "kubernetes_version": "\u003crke2/k3s-version\u003e",
                  "name": "foo-harvester-v2-cloud-provider",
                  "rke_config": [
                    {
                      "chart_values": "harvester-cloud-provider:\n  clusterName: foo-harvester-v2-cloud-provider\n  cloudConfigPath: /var/lib/rancher/rke2/etc/config-files/cloud-provider-config\n",
                      "etcd": [
                        {
                          "snapshot_retention": 5,
                          "snapshot_schedule_cron": "0 */5 * * *"
                        }
                      ],
                      "machine_global_config": "cni: \"calico\"\ndisable-kube-proxy: false\netcd-expose-metrics: false\n",
                      "machine_pools": [
                        {
                          "cloud_credential_secret_name": "${rancher2_cloud_credential.foo-harvester.id}",
                          "control_plane_role": true,
                          "etcd_role": true,
                          "machine_config": [
                            {
                              "kind": "${rancher2_machine_config_v2.foo-harvester-v2-cloud-provider.kind}",
                              "name": "${rancher2_machine_config_v2.foo-harvester-v2-cloud-provider.name}"
                            }
                          ],
                          "name": "pool1",
                          "quantity": 1,
                          "worker_role": true
                        }
                      ],
                      "machine_selector_config": [
                        {
                          "config": {
                            "cloud-provider-config": "${file(\"${path.module}/foo-harvester-v2-cloud-provider-kubeconfig\")}",
                            "cloud-provider-name": "harvester"
                          }
                        }
                      ],
                      "upgrade_strategy": [
                        {
                          "control_plane_concurrency": "10%",
                          "worker_concurrency": "10%"
                        }
                      ]
                    }
                  ]
                }
              references:
                rke_config.machine_pools.cloud_credential_secret_name: rancher2_cloud_credential.foo-harvester.id
                rke_config.machine_pools.machine_config.kind: rancher2_machine_config_v2.foo-harvester-v2-cloud-provider.kind
                rke_config.machine_pools.machine_config.name: rancher2_machine_config_v2.foo-harvester-v2-cloud-provider.name
              dependencies:
                rancher2_cloud_credential.foo-harvester: |-
                    {
                      "harvester_credential_config": [
                        {
                          "cluster_id": "${data.rancher2_cluster_v2.foo-harvester.cluster_v1_id}",
                          "cluster_type": "imported",
                          "kubeconfig_content": "${data.rancher2_cluster_v2.foo-harvester.kube_config}"
                        }
                      ],
                      "name": "foo-harvester"
                    }
                rancher2_machine_config_v2.foo-harvester-v2-cloud-provider: |-
                    {
                      "generate_name": "foo-harvester-v2-cloud-provider",
                      "harvester_config": [
                        {
                          "cpu_count": "2",
                          "disk_info": "    {\n        \"disks\": [{\n            \"imageName\": \"harvester-public/image-57hzg\",\n            \"size\": 40,\n            \"bootOrder\": 1\n        }]\n    }\n",
                          "memory_size": "4",
                          "network_info": "    {\n        \"interfaces\": [{\n            \"networkName\": \"harvester-public/vlan1\"\n        }]\n    }\n",
                          "ssh_user": "ubuntu",
                          "user_data": "    package_update: true\n    packages:\n      - qemu-guest-agent\n      - iptables\n    runcmd:\n      - - systemctl\n        - enable\n        - '--now'\n        - qemu-guest-agent.service\n",
                          "vm_namespace": "default"
                        }
                      ]
                    }
            - name: foo
              manifest: |-
                {
                  "agent_env_vars": [
                    {
                      "name": "foo1",
                      "value": "boo1"
                    },
                    {
                      "name": "foo2",
                      "value": "boo2"
                    }
                  ],
                  "kubernetes_version": "rke2/k3s-version",
                  "name": "cluster-with-agent-env-vars",
                  "rke_config": [
                    {}
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "cluster_agent_deployment_customization": [
                    {
                      "append_tolerations": [
                        {
                          "effect": "NoSchedule",
                          "key": "tolerate/control-plane",
                          "value": "true"
                        },
                        {
                          "effect": "NoSchedule",
                          "key": "tolerate/etcd",
                          "value": "true"
                        }
                      ],
                      "override_affinity": "{\n  \"nodeAffinity\": {\n    \"requiredDuringSchedulingIgnoredDuringExecution\": {\n      \"nodeSelectorTerms\": [{\n        \"matchExpressions\": [{\n          \"key\": \"not.this/nodepool\",\n          \"operator\": \"In\",\n          \"values\": [\n            \"true\"\n          ]\n        }]\n      }]\n    }\n  }\n}\n",
                      "override_resource_requirements": [
                        {
                          "cpu_limit": "800m",
                          "cpu_request": "500m",
                          "memory_limit": "800Mi",
                          "memory_request": "500Mi"
                        }
                      ]
                    }
                  ],
                  "fleet_agent_deployment_customization": [
                    {}
                  ],
                  "kubernetes_version": "rke2/k3s-version",
                  "name": "foo",
                  "rke_config": [
                    {
                      "machine_pools": [
                        {}
                      ]
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "default_pod_security_admission_configuration_template_name": "rancher-restricted",
                  "enable_network_policy": false,
                  "kubernetes_version": "rke2/k3s-version",
                  "name": "foo",
                  "rke_config": [
                    {
                      "machine_global_config": "${yamlencode({\n      cni = \"calico\"\n      disable-kube-proxy = false\n      etcd-expose-metrics = false\n      kube-apiserver-arg = local.kube_apiserver_arg\n    })}",
                      "machine_pools": [
                        {}
                      ]
                    }
                  ]
                }
            - name: foo_cluster_v2
              manifest: |-
                {
                  "kubernetes_version": "rke2/k3s-version",
                  "name": "cluster-with-custom-registry",
                  "rke_config": [
                    {
                      "machine_pools": [
                        {}
                      ],
                      "machine_selector_config": [
                        {
                          "config": {
                            "system-default-registry": "custom-registry-hostname"
                          }
                        }
                      ],
                      "registries": [
                        {
                          "configs": [
                            {
                              "auth_config_secret_name": "\u003cauth-config-secret-name\u003e",
                              "ca_bundle": "",
                              "hostname": "custom-registry-hostname",
                              "insecure": "\u003ctls-insecure-bool\u003e",
                              "tls_secret_name": ""
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "enable_network_policy": false,
                  "kubernetes_version": "rke2/k3s-version",
                  "name": "foo",
                  "rke_config": [
                    {
                      "machine_pools": [
                        {}
                      ],
                      "machine_selector_files": [
                        {
                          "file_sources": [
                            {
                              "secret": [
                                {
                                  "default_permissions": "644",
                                  "items": [
                                    {
                                      "key": "audit-policy",
                                      "path": "/etc/rancher/rke2/custom/policy-v1.yaml",
                                      "permissions": "666"
                                    }
                                  ],
                                  "name": "config-file-v1"
                                }
                              ]
                            }
                          ],
                          "machine_label_selector": [
                            {
                              "match_expressions": [
                                {
                                  "key": "name",
                                  "operator": "In",
                                  "values": [
                                    "a",
                                    "b"
                                  ]
                                },
                                {
                                  "key": "department",
                                  "operator": "In",
                                  "values": [
                                    "a",
                                    "b"
                                  ]
                                }
                              ],
                              "match_labels": {
                                "rke.cattle.io/control-plane-role": "true",
                                "rke.cattle.io/etcd-role": "true"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "enable_network_policy": false,
                  "kubernetes_version": "rke2-version",
                  "name": "foo",
                  "rke_config": [
                    {
                      "machine_global_config": "disable-kube-proxy: false\netcd-expose-metrics: false\nkubelet-arg:\n  - xxx=xxx\nkube-proxy-arg:\n  - xxx=xxx\nkube-apiserver-arg:\n  - xxx=xxx\nkube-scheduler-arg:\n  - xxx=xxx\nkube-cloud-controller-manager-arg:\n  - xxx=xxx\n",
                      "machine_pools": [
                        {}
                      ],
                      "machine_selector_config": [
                        {
                          "config": "        kubelet-arg:\n          - cloud-provider-name=external\n",
                          "machine_label_selector": [
                            {
                              "match_expressions": [
                                {
                                  "key": "name",
                                  "operator": "In",
                                  "values": [
                                    "a",
                                    "b"
                                  ]
                                },
                                {
                                  "key": "department",
                                  "operator": "In",
                                  "values": [
                                    "a",
                                    "b"
                                  ]
                                }
                              ],
                              "match_labels": {
                                "rke.cattle.io/control-plane-role": "true",
                                "rke.cattle.io/etcd-role": "true"
                              }
                            }
                          ]
                        },
                        {
                          "config": "        kube-proxy-arg:\n          - log_file_max_size=1800\n"
                        }
                      ]
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "kubernetes_version": "rke2/k3s-version",
                  "name": "foo",
                  "rke_config": [
                    {
                      "additional_manifest": "apiVersion: v1\nkind: Namespace\nmetadata:\n  name: testing-namespace-1\n---\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: testing-namespace-2\n",
                      "machine_pools": [
                        {}
                      ]
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "kubernetes_version": "rke2/k3s-version",
                  "machine_pools": [
                    {}
                  ],
                  "name": "foo",
                  "rke_config": [
                    {
                      "etcd": [
                        {
                          "s3_config": [
                            {
                              "bucket": "backups",
                              "cloud_credential_name": "${rancher2_cloud_credential.credentials.id}",
                              "endpoint": "https://minio.host:9000"
                            }
                          ],
                          "snapshot_retention": 10,
                          "snapshot_schedule_cron": "0 */12 * * *"
                        }
                      ]
                    }
                  ]
                }
              references:
                rke_config.etcd.s3_config.cloud_credential_name: rancher2_cloud_credential.credentials.id
              dependencies:
                rancher2_cloud_credential.credentials: |-
                    {
                      "name": "rancher-creds",
                      "s3_credential_config": [
                        {
                          "access_key": "\u003cACCESS_KEY\u003e",
                          "secret_key": "\u003cSECRET_KEY\u003e"
                        }
                      ]
                    }
            - name: foo
              manifest: |-
                {
                  "kubernetes_version": "k3s-version",
                  "machine_pools": [
                    {}
                  ],
                  "name": "foo",
                  "rke_config": [
                    {
                      "machine_global_config": "disable:\n  - coredns\n  - servicelb\n  - traefik\n  - local-storage\n  - metrics-server\n"
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "kubernetes_version": "rke2-version",
                  "machine_pools": [
                    {}
                  ],
                  "name": "foo",
                  "rke_config": [
                    {
                      "machine_global_config": "disable:\n  - rke2-coredns\n  - rke2-ingress-nginx\n  - rke2-metrics-server\n  - metrics-server\n"
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "kubernetes_version": "rke2/k3s-version",
                  "machine_pools": [
                    {}
                  ],
                  "name": "foo",
                  "rke_config": [
                    {
                      "machine_global_config": "tls-san: [\"example-website.com\", \"100.100.100.100\", \"2002:db8:3333:4444:5555:6666:7777:8888\"]\n"
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "kubernetes_version": "rke2/k3s-version",
                  "machine_pools": [
                    {}
                  ],
                  "name": "foo",
                  "rke_config": [
                    {
                      "machine_global_config": "cluster-cidr: \"0.42.0.0/16\"\nservice-cidr: \"0.42.0.0/16\"\n"
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "enable_network_policy": false,
                  "kubernetes_version": "rke2-version",
                  "name": "foo",
                  "rke_config": [
                    {
                      "chart_values": "rke2-calico:\n  calicoctl:\n    image: rancher/mirrored-calico-ctl\n    tag: v3.19.2\n  certs:\n    node:\n      cert: null\n      commonName: null\n      key: null\n    typha:\n      caBundle: null\n      cert: null\n      commonName: null\n      key: null\n  felixConfiguration:\n    featureDetectOverride: ChecksumOffloadBroken=true\n  global:\n    systemDefaultRegistry: \"\"\n  imagePullSecrets: {}\n  installation:\n    calicoNetwork:\n      bgp: Disabled\n      ipPools:\n      - blockSize: 24\n        cidr: 10.42.0.0/16\n        encapsulation: VXLAN\n        natOutgoing: Enabled\n    controlPlaneTolerations:\n    - effect: NoSchedule\n      key: node-role.kubernetes.io/control-plane\n      operator: Exists\n    - effect: NoExecute\n      key: node-role.kubernetes.io/etcd\n      operator: Exists\n    enabled: true\n    imagePath: rancher\n    imagePrefix: mirrored-calico-\n    kubernetesProvider: \"\"\n  ipamConfig:\n    autoAllocateBlocks: true\n    strictAffinity: true\n  tigeraOperator:\n    image: rancher/mirrored-calico-operator\n    registry: docker.io\n    version: v1.17.6\n",
                      "machine_pools": [
                        {}
                      ]
                    }
                  ]
                }
        argumentDocs:
            additional_manifest: '- (Optional, string, must be in YAML format) The value of the additional manifest is delivered to the path /var/lib/rancher/rke2/server/manifests/rancher/addons.yaml or /var/lib/rancher/k3s/server/manifests/rancher/addons.yaml on the control plane nodes.'
            agent_env_vars: '- (Optional, list) Agent env vars is a list of additional environment variables to be appended to the cattle-cluster-agent and fleet-agent deployment, and the plan for the system upgrade controller to upgrade nodes.'
            annotations: '- (Optional/computed, map) Annotations for the Cluster.'
            api_version: '- (Optional, string) Api version of the machine_config.'
            append_tolerations: '- (Optional, list) A list of tolerations to be appended to the default tolerations.'
            auth_config_secret_name: '- (Optional, string) Name of the secret that contains two keys with base64 encoded values: the username and password for the specified custom registry. No secret is required if the system-default-registry is not authenticated.'
            bucket: '- (Required, string) Bucket name for S3 service.'
            ca_bundle: '- (Optional, string) Registry CA bundle.'
            ca_certs: '- (Optional, string) CA certs for the authorized cluster endpoint. It is only needed if there is a load balancer in front of the downstream cluster that is using an untrusted certificate. If you have a valid certificate, then nothing needs to be added to the CA Certificates field.'
            chart_values: '- (Optional, string, must be in YAML format) The value for the system charts installed by the distribution. For more information about how RKE2 or K3s manage packaged components, please refer to RKE2 documentation or K3s documentation.'
            cloud_credential_name: '- (Optional, string) ETCD snapshot S3 cloud credential name.'
            cloud_credential_secret_name: '- (Optional, string) Cloud credential secret name is the secret to be used when a cloud credential secret name is not specified at the machine pool level.'
            cluster_agent_deployment_customization: '- (Optional, list) Cluster agent deployment customization specifies the additional tolerations, new affinity rules, and new resource requirements on the cattle-cluster-agent deployment. This argument is available in Rancher v2.7.5 and above.'
            cluster_id: '- (Computed, string) Cluster ID.'
            cluster_registration_token: '- (Computed, sensitive, list, max length: 1) Cluster Registration Token generated for the cluster.'
            cluster_v1_id: '- (Computed, string) Cluster v1 id for cluster v2. (e.g. to be used with rancher2_sync).'
            command: '- (Computed, string) Command to execute in an imported k8s cluster.'
            config: '- (Optional, string, must be in YAML format) Config is the distribution-specify configuration to be applied to nodes that match the provided label selector. For more information, please refer to Rancher''s documentation for RKE2 Cluster Configuration or K3s Cluster Configuration'
            configmap: '- (Optional, list, max length: 1) Configmap represents a K8s configmap which is the source of files. It is mutually exclusive with secret.'
            configs: '- (Optional, list) Cluster V2 docker registries config.'
            control_plane_concurrency: '- (Optional, string) How many control plane nodes should be upgraded at a time, 0 is infinite. Percentages are also accepted.'
            control_plane_drain_options: '- (Optional, list, max length: 1) Controlplane nodes drain options.'
            control_plane_role: '- (Optional, bool) Machine pool control plane role?'
            cpu_limit: '- (Optional, string) The maximum CPU limit for agent.'
            cpu_request: '- (Optional, string) The minimum CPU required for agent.'
            create: '- (Default 30 minutes) Used for creating clusters v2.'
            default_cluster_role_for_project_members: '- (Optional, string) Default cluster role for project members.'
            default_permissions: '- (Optional, string) The numeric representation of the default file permissions for all files defined under the items.'
            default_pod_security_admission_configuration_template_name: '- (Optional, string) The name of the pre-defined pod security admission configuration template to be applied to the cluster. Rancher admins (or those with the right permissions) can create, manage, and edit those templates. For more information, please refer to Rancher Documentation. The argument is available in Rancher v2.7.2 and above.'
            delete: '- (Default 30 minutes) Used for deleting clusters v2.'
            delete_empty_dir_data: '- (Optional, bool, default: false) if delete_empty_dir_data is set to true, continue draining even if there are pods using emptyDir (local storage).'
            disable_eviction: '- (Optional, bool, default: false) If disable_eviction is set to true, force drain to use delete rather than evict.'
            disable_snapshots: '- (Optional, bool, default: false) Disable ETCD snapshots.'
            drain_before_delete: '- (Optional, bool) Machine Pool Drain Before Delete?'
            dynamic: '- (Optional, boolean, default: true) If true, the file is ignored when determining whether the node should be drained before updating the node plan.'
            effect: '- (Optional, string) The toleration effect. Default: \"NoSchedule\".'
            enable_network_policy: '- (Optional, bool, default: false) Enable k8s network policy on the cluster.'
            enabled: '- (Optional, bool, default: false) Enable the authorized cluster endpoint.'
            endpoint: '- (Required, string) ETCD snapshot S3 endpoint.'
            endpoint_ca: '- (Optional, string) ETCD snapshot S3 endpoint CA.'
            endpoints: '- (Optional, list) Registry mirror endpoints.'
            etcd: '- (Optional/computed, list, max length: 1) Etcd configures the behavior of the automatic etcd snapshot feature.'
            etcd_role: '- (Optional, bool) Machine pool etcd role?'
            etcd_snapshot_create: '(Optional, list, max length: 1) Cluster V2 etcd snapshot create.'
            etcd_snapshot_restore: '(Optional, list, max length: 1) Cluster V2 etcd snapshot restore.'
            file_sources: '- (Optional, list) File sources represents the source of the files. Multiple files can be delivered to nodes that match the provided label selector.'
            fleet_agent_deployment_customization: '- (Optional, list) Fleet agent deployment customization specifies the additional tolerations, new affinity rules, and new resource requirements on the fleet-agent deployment. The argument is available in Rancher v2.7.5 and above.'
            fleet_namespace: '- (Optional, ForceNew, string, default: fleet-default) Fleet namespace is the namespace where the cluster is to create in the local cluster. It is recommended to leave it as the default value.'
            folder: '- (Optional, string) ETCD snapshot S3 folder.'
            force: '- (Optional, bool, default: false) If force is set to true, drain nodes even if there are standalone pods that are not managed by a ReplicationController, Job, or DaemonSet. Drain will not proceed without force set to true if there are such pods.'
            fqdn: '- (Optional, string) FQDN for the authorized cluster endpoint. If one is entered, it should point to the downstream cluster.'
            generation: '- (Required, int) Desired certificate rotation generation.'
            grace_period: '- (Optional/computed, int) Time in seconds given to each pod to terminate gracefully. If negative, the default value specified in the pod will be used.'
            hash: '- (Optional, string) Hash is the base64 encoded value of the SHA256 checksum of the file''s content. If specified, it is used to validate the integrity of the file content.'
            hostname: '- (Required, string) Registry hostname.'
            id: '- (Computed, string) The ID of the resource.'
            ignore_daemon_sets: '- (Optional, bool, default: true) If ignore_daemon_sets is set to false, drain will not proceed if there are DaemonSet-managed pods.'
            ignore_errors: '- (Optional, bool, default: false) If ignore_errors is set to true,  errors that occurred between drain nodes in group are ignored.'
            insecure: '- (Optional, bool) Registry insecure connectivity.'
            insecure_command: '- (Computed, string) Insecure command to execute in an imported k8s cluster.'
            insecure_node_command: '- (Computed, string) Insecure node command to execute in an imported k8s cluster.'
            insecure_windows_node_command: '- (Computed, string) Insecure windows command to execute in an imported k8s cluster.'
            items: '- (Optional, list) Items is a list of configurations for files, such as where to retrieve the content from the source, where to put the file on nodes, and etc.'
            key: '- (Required, string) The toleration key.'
            kind: '- (Required, string) Machine config kind.'
            kube_config: '- (Computed/Sensitive) Kube Config generated for the cluster. Note: When the cluster has local_auth_endpoint enabled, the kube_config will not be available until the cluster is connected.'
            kubernetes_version: '- (Required, string) The RKE2 or K3s version for the cluster.'
            labels: '- (Optional/computed, map) Labels for the Cluster.'
            local_auth_endpoint: '- (Optional, list, max length: 1) Local auth endpoint configures the Authorized Cluster Endpoint (ACE) which can be used to directly access the Kubernetes API server, without requiring communication through Rancher. For more information, please refer to Rancher Documentation.'
            machine_config: '- (Required, list) Machine pool node config.'
            machine_global_config: '- (Optional, string, must be in YAML format) Machine global config specifies the distribution-specified server configuration applied to all nodes. For the full list of server configurations, please refer to RKE2 server configuration or K3s server configuration.'
            machine_label_selector: '- (Optional, list, max length: 1) Machine selector label is a label query over a set of resources. The result of match_labels and match_expressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.'
            machine_labels: '- (Optional, map) Labels for Machine pool nodes.'
            machine_pools: '- (Optional/computed, list) Cluster V2 machine pools.'
            machine_selector_config: '- (Optional/computed, list) Machine selector config is the same as machine_global_config except that a label selector can be specified with the configuration. The configuration will only be applied to nodes that match the provided label selector. The configuration from machine_selector_config takes precedence over the one from machine_global_config. This argument is available in Rancher v2.7.2 and later.'
            machine_selector_files: '- (Optional/computed, list) Machine selector files provide a means to deliver files to nodes so that the files can be in place before initiating RKE2/K3s server or agent processes. Please refer to Rancher documentation for RKE2 Cluster Configuration Reference and K3s Cluster Configuration Reference. This argument is available in Rancher v2.7.2 and later.'
            manifest_url: '- (Computed, string) K8s manifest url to execute with kubectl to import an existing k8s cluster.'
            match_expressions: '- (Optional, list) Match expressions is a list of label selector requirements. The requirements are ANDed.'
            match_labels: '- (Optional, map) Machine selector label is a map of {key,value} pairs, the requirements are ANDed.'
            max_surge: '- (Optional, string) Rolling update max surge.'
            max_unavailable: '- (Optional, string) Rolling update max unavailable.'
            max_unhealthy: '- (Optional, string) Max unhealthy nodes for automated replacement to be allowed.'
            memory_limit: '- (Optional, string) The maximum memory limit for agent.'
            memory_request: '- (Optional, string) The minimum memory required for agent.'
            mirrors: '- (Optional, list) Cluster V2 docker registries mirror.'
            name: '- (Required, forceNew, string) The name of the cluster.'
            node_command: '- (Computed, string) Node command to execute in Linux nodes for custom k8s cluster.'
            node_drain_timeout: '- (Optional, int) Seconds a machine has to drain before deletion.'
            node_startup_timeout_seconds: '- (Optional, int) Seconds a new node has to become active before it is replaced.'
            operator: '- (Optional, string) The toleration operator.'
            override_affinity: '- (Optional, string, JSON format) Override affinity overrides the global default affinity setting.'
            override_resource_requirements: '- (Optional, list) Override resource requirements overrides the default value for requests and/or limits.'
            path: '- (Required, string) Path is the absolute path to put the file in the target node.'
            paused: '- (Optional, bool) Machine pool paused?'
            permissions: '- (Optional, string) Permissions is the numeric representation of the file permission. It takes precedence over the default permissions at the outer level.'
            quantity: '- (Optional, int) Machine pool quantity.'
            region: '- (Optional, string) ETCD snapshot S3 region.'
            registries: '- (Optional, list, max length: 1) Docker registries from which the cluster pulls images.'
            resource_version: '- (Computed, string) Cluster''s k8s resource version.'
            restore_rke_config: (Optional, string) ETCD restore RKE config (set to none, all, or kubernetesVersion).
            rewrites: '- (Optional, map) Registry mirror rewrites.'
            rke_config: '- (Optional/computed, list, max length: 1) The RKE configuration for the cluster.'
            rolling_update: '- (Optional, list, max length: 1) Machine pool rolling update.'
            rotate_certificates: '(Optional, list, max length: 1) Cluster V2 certificate rotation.'
            s3_config: '- (Optional, list, max length: 1) Creation option for etcd service.'
            seconds: '- (Optional, int) The number of seconds a pod will stay bound to a node with a matching taint.'
            secret: '- (Optional, list, max length: 1) Secret represents a K8s secret which is the source of files. It is mutually exclusive with configmap.'
            services: '- (Optional, list of string) Service certificates to rotate with this generation.'
            skip_ssl_verify: '- (Optional, bool, default: false) Disable ETCD skip ssl verify.'
            skip_wait_for_delete_timeout_seconds: '- (Optional/computed, int) Skip waiting for the pods that have a DeletionTimeStamp > N seconds to be deleted. Seconds must be greater than 0 to skip. Such pods will be force deleted.'
            snapshot_retention: '- (Optional, int) ETCD snapshot retention.'
            snapshot_schedule_cron: '- (Optional, string) ETCD snapshot schedule cron (e.g \"0 */5 * * *\").'
            taints: '- (Optional, list) Machine pool taints.'
            timeout: '- (Optional/computed, int) Time to wait (in seconds) before giving up for one try.'
            tls_secret_name: '- (Optional, sensitive, string) Registry TLS secret name. TLS is a pair of Cert/Key.'
            token: '- (Computed, string) Token for cluster registration token object.'
            unhealthy_node_timeout_seconds: '- (Optional, int) Seconds an unhealthy node has to become active before it is replaced.'
            unhealthy_range: '- (Optional, string) Range of unhealthy nodes for automated replacement to be allowed.'
            update: '- (Default 30 minutes) Used for cluster v2 modifications.'
            upgrade_strategy: '- (Optional, list, max length: 1) Cluster upgrade strategy.'
            value: '- (Required, string) Rancher agent env var value.'
            values: '- (Optional, string list) Values is a list of string values.'
            windows_node_command: '- (Computed, string) Node command to execute in Windows nodes for custom k8s cluster.'
            worker_concurrency: '- (Optional, string) How many worker nodes should be upgraded at a time. Percentages are also accepted.'
            worker_drain_options: '- (Optional, list, max length: 1) Worker nodes drain options.'
            worker_role: '- (Optional, bool) Machine pool worker role?'
        importStatements: []
    rancher2_config_map_v2:
        subCategory: ""
        name: rancher2_config_map_v2
        title: rancher2_config_map_v2 Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "cluster_id": "CLUSTER_ID",
                  "data": {
                    "mydata1": "data1",
                    "mydata2": "data2",
                    "mydata3": "data3"
                  },
                  "name": "foo"
                }
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations for the configMap v2 (map)'
            cluster_id: '- (Required/ForceNew) The cluster id of the configMap V2 (string)'
            create: '- (Default 10 minutes) Used for creating v2 configMaps.'
            data: '- (Required) The data of the configMap v2 (map)'
            delete: '- (Default 10 minutes) Used for deleting v2 configMaps.'
            id: '- (Computed) The ID of the resource (string)'
            immutable: '- (Optional) If set to true, any configMap update will remove and recreate the configMap. This is a beta field enabled by k8s ImmutableEphemeralVolumes feature gate. Default: false (bool)'
            labels: '- (Optional/Computed) Labels for the configMap v2 (map)'
            name: '- (Required/ForceNew) The name of the configMap v2 (string)'
            namespace: '- (Optional/ForceNew) The namespaces of the configMap v2. Default: default (string)'
            resource_version: '- (Computed) The k8s resource version (string)'
            update: '- (Default 10 minutes) Used for v2 configMap modifications.'
        importStatements: []
    rancher2_custom_user_token:
        subCategory: ""
        name: rancher2_custom_user_token
        title: rancher2_custom_user_token Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "depends_on": [
                    "${rancher2_global_role_binding.foo-login}"
                  ],
                  "description": "foo token",
                  "password": "${rancher2_user.foo.password}",
                  "ttl": 0,
                  "username": "${rancher2_user.foo.username}"
                }
              references:
                password: rancher2_user.foo.password
                username: rancher2_user.foo.username
              dependencies:
                rancher2_global_role_binding.foo-login: |-
                    {
                      "global_role_id": "user-base",
                      "name": "foo-login-binding",
                      "user_id": "${rancher2_user.foo.id}"
                    }
                rancher2_user.foo: |-
                    {
                      "enabled": true,
                      "name": "foo",
                      "password": "changeme",
                      "username": "foo"
                    }
        argumentDocs:
            access_key: '- (Computed) Token access key part (string)'
            annotations: '- (Computed) Annotations of the token (map)'
            cluster_id: should be provided).
            create: '- (Default 5 minutes) Used for creating tokens.'
            delete: '- (Default 5 minutes) Used for deleting tokens.'
            description: '- (Optional/ForceNew) Token description (string)'
            enabled: '- (Computed) Token is enabled (bool)'
            expired: '- (Computed) Token is expired (bool)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Computed) Labels of the token (map)'
            name: '- (Computed) Token name (string)'
            password: '- (Required/ForceNew) The user password (string)'
            renew: '- (Optional/ForceNew) Renew token if expired or disabled. If true, a terraform diff would be generated to renew the token if it''s disabled or expired. If false, the token will not be renewed. Default true (bool)'
            secret_key: '- (Computed/Sensitive) Token secret key part (string)'
            temp_token: '- (Computed) Generated API temporary token as helper. Should be empty (string)'
            temp_token_id: '- (Computed) Generated API temporary token id as helper. Should be empty (string)'
            token: '- (Computed/Sensitive) Token value (string)'
            ttl: '- (Optional/ForceNew) Token time to live in seconds. Default 0 (int)'
            update: '- (Default 5 minutes) Used for token modifications.'
            user_id: '- (Computed) Token user ID (string)'
            username: '- (Required/ForceNew) The user username (string)'
        importStatements: []
    rancher2_etcd_backup:
        subCategory: ""
        name: rancher2_etcd_backup
        title: rancher2_etcd_backup Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "backup_config": [
                    {
                      "enabled": true,
                      "interval_hours": 20,
                      "retention": 10,
                      "s3_backup_config": [
                        {
                          "access_key": "access_key",
                          "bucket_name": "bucket_name",
                          "endpoint": "endpoint",
                          "folder": "/folder",
                          "region": "region",
                          "secret_key": "secret_key"
                        }
                      ]
                    }
                  ],
                  "cluster_id": "\u003cCLUSTER_ID\u003e",
                  "filename": "\u003cFILENAME\u003e",
                  "name": "foo"
                }
        argumentDocs:
            access_key: '- (Optional/Sensitive) Access key for S3 service (string)'
            annotations: '- (Optional) Annotations for Etcd Backup object (map)'
            backup_config: '- (Optional/Computed) Backup config for etcd backup (list maxitems:1)'
            bucket_name: '- (Required) Bucket name for S3 service (string)'
            cluster_id: '- (Required) Cluster ID to config Etcd Backup (string)'
            create: '- (Default 10 minutes) Used for creating cloud credentials.'
            custom_ca: '- (Optional) Base64 encoded custom CA for S3 service. Use filebase64() for encoding file. Available from Rancher v2.2.5 (string)'
            delete: '- (Default 10 minutes) Used for deleting cloud credentials.'
            enabled: '- (Optional) Enable etcd backup (bool)'
            endpoint: '- (Required) Endpoint for S3 service (string)'
            filename: '- (Optional/Computed) Filename of the Etcd Backup (string)'
            folder: '- (Optional) Folder for S3 service. Available from Rancher v2.2.7 (string)'
            id: '- (Computed) The ID of the resource (string)'
            interval_hours: '- (Optional) Interval hours for etcd backup. Default 12 (int)'
            labels: '- (Optional/Computed) Labels for Etcd Backup object (map)'
            manual: '- (Optional) Manual execution of the Etcd Backup. Default false (bool)'
            name: '- (Required) The name of the Etcd Backup (string)'
            namespace_id: '- (Optional/Computed) Description for the Etcd Backup (string)'
            region: '- (Optional) Region for S3 service (string)'
            retention: '- (Optional) Retention for etcd backup. Default 6 (int)'
            s3_backup_config: '- (Optional) S3 config options for etcd backup. Valid for imported and rke clusters. (list maxitems:1)'
            secret_key: '- (Optional/Sensitive) Secret key for S3 service (string)'
            update: '- (Default 10 minutes) Used for cloud credential modifications.'
        importStatements: []
    rancher2_feature:
        subCategory: ""
        name: rancher2_feature
        title: rancher2_feature Resource
        examples:
            - name: fleet
              manifest: |-
                {
                  "name": "fleet",
                  "value": "\u003cVALUE\u003e"
                }
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations for feature object (map)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels for feature object (map)'
            name: '- (Required) The name of the feature (string)'
            value: '- (Optional) The value of the feature. Default: false (bool)'
        importStatements: []
    rancher2_global_role:
        subCategory: ""
        name: rancher2_global_role
        title: rancher2_global_role Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "Terraform global role acceptance test",
                  "name": "foo",
                  "new_user_default": true,
                  "rules": [
                    {
                      "api_groups": [
                        "*"
                      ],
                      "resources": [
                        "secrets"
                      ],
                      "verbs": [
                        "create"
                      ]
                    }
                  ]
                }
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations for global role object (map)'
            api_groups: '- (Optional) Policy rule api groups (list)'
            builtin: '- (Computed) Builtin global role (bool)'
            create: '- (Default 10 minutes) Used for creating global role.'
            delete: '- (Default 10 minutes) Used for deleting global role.'
            description: '- (Optional/Computed) Global role description (string)'
            id: '- (Computed) The ID of the resource (string)'
            inherited_cluster_roles: '- (Optional) Names of role templates whose permissions are granted by this global role in every cluster besides the local cluster (list)'
            labels: '- (Optional/Computed) Labels for global role object (map)'
            name: '- (Required) Global role name (string)'
            new_user_default: '- (Optional) Whether or not this role should be added to new users. Default false (bool)'
            non_resource_urls: '- (Optional) Policy rule non resource urls (list)'
            resource_names: '- (Optional) Policy rule resource names (list)'
            resources: '- (Optional) Policy rule resources (list)'
            rules: '- (Optional/Computed) Global role policy rules (list)'
            update: '- (Default 10 minutes) Used for global role modifications.'
            verbs: '- (Optional) Policy rule verbs. bind, create, delete, deletecollection, escalate, get, impersonate, list, manage-namespaces, patch, update, updatepsa, use, view, watch, own and * values are supported (list)'
        importStatements: []
    rancher2_global_role_binding:
        subCategory: ""
        name: rancher2_global_role_binding
        title: rancher2_global_role_binding Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "global_role_id": "admin",
                  "name": "foo",
                  "user_id": "user-XXXXX"
                }
            - name: foo2
              manifest: |-
                {
                  "global_role_id": "admin",
                  "group_principal_id": "local://g-XXXXX",
                  "name": "foo2"
                }
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations for global role binding (map)'
            create: '- (Default 5 minutes) Used for creating global role bindings.'
            delete: '- (Default 5 minutes) Used for deleting global role bindings.'
            global_role_id: '- (Required/ForceNew) The role id from create global role binding (string)'
            group_principal_id: '- (Optional/Computed/ForceNew) The group principal ID to assign global role binding (only works with external auth providers that support groups). Rancher v2.4.0 or higher is required (string)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels for global role binding (map)'
            name: '- (Optional/Computed/ForceNew) The name of the global role binding (string)'
            update: '- (Default 5 minutes) Used for global role binding modifications.'
            user_id: '- (Optional/Computed/ForceNew) The user ID to assign global role binding (string)'
        importStatements: []
    rancher2_machine_config_v2:
        subCategory: ""
        name: rancher2_machine_config_v2
        title: rancher2_machine_config_v2 Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "amazonec2_config": [
                    {
                      "ami": "AMI_ID",
                      "region": "REGION",
                      "security_group": [
                        "AWS_SG"
                      ],
                      "subnet_id": "SUBNET_ID",
                      "vpc_id": "VPC_ID",
                      "zone": "ZONE"
                    }
                  ],
                  "generate_name": "test-foo"
                }
            - name: foo-harvester-v2
              manifest: |-
                {
                  "generate_name": "foo-harvester-v2",
                  "harvester_config": [
                    {
                      "cpu_count": "2",
                      "disk_info": "    {\n        \"disks\": [{\n            \"imageName\": \"harvester-public/image-57hzg\",\n            \"size\": 40,\n            \"bootOrder\": 1\n        }]\n    }\n",
                      "memory_size": "4",
                      "network_info": "    {\n        \"interfaces\": [{\n            \"networkName\": \"harvester-public/vlan1\"\n        }]\n    }\n",
                      "ssh_user": "ubuntu",
                      "user_data": "    package_update: true\n    packages:\n      - qemu-guest-agent\n      - iptables\n    runcmd:\n      - - systemctl\n        - enable\n        - '--now'\n        - qemu-guest-agent.service\n",
                      "vm_namespace": "default"
                    }
                  ]
                }
              dependencies:
                rancher2_cloud_credential.foo-harvester: |-
                    {
                      "harvester_credential_config": [
                        {
                          "cluster_id": "${data.rancher2_cluster_v2.foo-harvester.cluster_v1_id}",
                          "cluster_type": "imported",
                          "kubeconfig_content": "${data.rancher2_cluster_v2.foo-harvester.kube_config}"
                        }
                      ],
                      "name": "foo-harvester"
                    }
        argumentDocs:
            access_token: '- (Optional/Sensitive) Digital Ocean access token. Mandatory on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x (string)'
            active_timeout: '- (Optional) OpenStack active timeout Default 200 (string)'
            amazonec2_config: '- (Optional) AWS config for the Machine Config V2. Conflicts with azure_config, digitalocean_config, harvester_config, linode_config, openstack_config and vsphere_config (list maxitems:1)'
            ami: '- (Required) AWS machine image (string)'
            annotations: '- (Optional) Annotations for Machine Config V2 object (map)'
            application_credential_id: '- (Optional) OpenStack application credential id. Conflicts with application_credential_name (string)'
            application_credential_name: '- (Optional) OpenStack application credential name. Conflicts with application_credential_id (string)'
            application_credential_secret: '- (Optional) OpenStack application credential secret (string)'
            auth_url: '- (Required) OpenStack authentication URL (string)'
            authorized_users: '- (Optional) Linode user accounts (seperated by commas) whose Linode SSH keys will be permitted root access to the created node. (string)'
            availability_set: '- (Optional) Azure Availability Set to place the virtual machine into. Default docker-machine (string)'
            availability_zone: '- (Required) OpenStack availability zone (string)'
            azure_config: '- (Optional) Azure config for the Machine Config V2. Conflicts with amazonec2_config, digitalocean_config, harvester_config, linode_config, openstack_config and vsphere_config (list maxitems:1)'
            backups: '- (Optional) Enable backups for droplet. Default false (bool)'
            block_duration_minutes: '- (Optional) AWS spot instance duration in minutes (60, 120, 180, 240, 300, or 360). Default 0 (string)'
            boot_from_volume: '- (Optional) Enable booting from volume. Default is false (bool)'
            boot2docker_url: '- (Optional) vSphere URL for boot2docker iso image. Default https://releases.rancher.com/os/latest/rancheros-vmware.iso (string)'
            cacert: '- (Optional) CA certificate bundle to verify against (string)'
            cfgparam: '- (Optional) vSphere vm configuration parameters (used for guestinfo) (list)'
            client_id: '- (Optional/Sensitive) Azure Service Principal Account ID. Mandatory on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x (string)'
            client_secret: '- (Optional/Sensitive) Azure Service Principal Account password. Mandatory on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x (string)'
            clone_from: '- (Optional) If you choose creation type vm (clone vm) a name of what vm you want to clone is required (string)'
            cloud_config: '- (Optional) Filepath to a cloud-config yaml file to put into the ISO user-data (string)'
            cloudinit: '- (Optional) vSphere cloud-init file or url to set in the guestinfo (string)'
            config_drive: '- (Optional) Enables the OpenStack config drive for the instance. Default false (bool)'
            content_library: '- (Optional) If you choose to clone from a content library template specify the name of the library (string)'
            cpu_count: '- (Optional) CPU count, Default 2 (string)'
            create: '- (Default 10 minutes) Used for creating machine configs.'
            create_private_ip: '- (Optional) Create private IP for the instance. Default false (bool)'
            creation_type: '- (Optional) Creation type when creating a new virtual machine. Supported values: vm, template, library, legacy. Default legacy (string)'
            custom_attributes: '- (Optional) vSphere custom attributes, format key/value e.g. 200=my custom value (List)'
            custom_data: '- (Optional) Path to file with custom-data (string)'
            datacenter: '- (Optional) vSphere datacenter for docker VM (string)'
            datastore: '- (Optional) vSphere datastore for docker VM (string)'
            datastore_cluster: '- (Optional) vSphere datastore cluster for virtual machine (string)'
            delete: '- (Default 10 minutes) Used for deleting machine configs.'
            device_name: '- (Optional) AWS root device name. Default /dev/sda1 (string)'
            digitalocean_config: '- (Optional) Digitalocean config for the Machine Config V2. Conflicts with amazonec2_config, azure_config, harvester_config, linode_config, openstack_config and vsphere_config (list maxitems:1)'
            disk_bus: '- (Deprecated) Use disk_info instead'
            disk_info: '- (Required) A JSON string specifying info for the disks e.g. {\"disks\":[{\"imageName\":\"harvester-public/image-57hzg\",\"bootOrder\":1,\"size\":40},{\"storageClassName\":\"node-driver-test\",\"bootOrder\":2,\"size\":1}]} (string)'
            disk_size: '- (Optional) Disk size if using managed disk. For Rancher v2.3.x and above. Default 30 (string)'
            dns: '- (Optional) A unique DNS label for the public IP adddress (string)'
            docker_port: '- (Optional) Port number for Docker engine. Default 2376 (string)'
            domain_id: '- (Required++) OpenStack domain ID. Identity v3 only. Conflicts with domain_name (string)'
            domain_name: '- (Required++) OpenStack domain name. Identity v3 only. Conflicts with domain_id (string)'
            encrypt_ebs_volume: '- (Optional) Encrypt EBS volume. Default false (bool)'
            endpoint: '- (Optional) Optional endpoint URL (hostname only or fully qualified URI) (string)'
            endpoint_type: '- (Optional) OpenStack endpoint type. adminURL, internalURL or publicURL (string)'
            environment: '- (Optional) Azure environment (e.g. AzurePublicCloud, AzureChinaCloud). Default AzurePublicCloud (string)'
            fault_domain_count: '- (Optional) Fault domain count to use for availability set. Default 3 (string)'
            flavor_id: '- (Required+) OpenStack flavor id to use for the instance. Conflicts with flavor_name (string)'
            flavor_name: '- (Required+) OpenStack flavor name to use for the instance. Conflicts with flavor_id (string)'
            fleet_namespace: '- (Optional/ForceNew) Cluster V2 fleet namespace'
            floating_ip_pool: '- (Optional) OpenStack floating IP pool to get an IP from to assign to the instance (string)'
            folder: '- (Optional) vSphere folder for the docker VM. This folder must already exist in the datacenter (string)'
            generate_name: '- (Required/ForceNew) Cluster V2 generate name. The pattern to generate machine config name. e.g  generate_name="prod-pool1" will generate "nc-prod-pool1-?????" name computed at name attribute (string)'
            graceful_shutdown_timeout: (Optional) Duration in seconds before the graceful shutdown of the VM times out and the VM is destroyed. A force destroy will be performed when the value is zero (string)
            harvester_config: '- (Optional) Harvester config for the Machine Config V2. Conflicts with amazonec2_config, azure_config, digitalocean_config, linode_config, openstack_config and vsphere_config (list maxitems:1)'
            hostsystem: '- (Optional) vSphere compute resource where the docker VM will be instantiated. This can be omitted if using a cluster with DRS (string)'
            http_endpoint: '- (Optional) Enables or disables the HTTP metadata endpoint on your instances (string)'
            http_tokens: '- (Optional) The state of token usage for your instance metadata requests (string)'
            iam_instance_profile: '- (Optional) AWS IAM Instance Profile (string)'
            id: '- (Computed) The ID of the resource (string)'
            image: '- (Optional) Azure virtual machine OS image. Default canonical:UbuntuServer:18.04-LTS:latest (string)'
            image_id: '- (Required+) OpenStack image id to use for the instance. Conflicts with image_name (string)'
            image_name: '- (Deprecated) Use disk_info instead'
            insecure: '- (Optional) Disable TLS credential checking. Default false (bool)'
            insecure_transport: '- (Optional) Disable SSL when sending requests (bool)'
            instance_type: '- (Optional) AWS instance type. Default t3a.medium (string)'
            ip_version: '- (Optional) OpenStack version of IP address assigned for the machine Default 4 (string)'
            ipv6: '- (Optional) Enable ipv6 for droplet. Default false (bool)'
            keypair_name: '- (Optional) OpenStack keypair to use to SSH to the instance (string)'
            kind: '- (Computed) The machine config kind (string)'
            kms_key: '- (Optional) Custom KMS key ID using the AWS Managed CMK (string)'
            label: '- (Optional) Linode Instance Label. (string)'
            labels: '- (Optional/Computed) Labels for Machine Config V2 object (map)'
            linode_config: '- (Optional) Linode config for the Machine Config V2. Conflicts with amazonec2_config, azure_config, digitalocean_config, harvester_config, openstack_config and vsphere_config (list maxitems:1)'
            location: '- (Optional) Azure region to create the virtual machine. Default westus (string)'
            managed_disks: '- (Optional) Configures VM and availability set for managed disks. For Rancher v2.3.x and above. Default false (bool)'
            memory_size: '- (Optional) Memory size (in GiB), Default 4 (string)'
            monitoring: '- (Optional) Set this flag to enable CloudWatch monitoring. Deafult false (bool)'
            name: '- (Computed) The machine config name (string)'
            net_id: '- (Required+) OpenStack network id the machine will be connected on. Conflicts with net_name (string)'
            net_name: '- (Required+) OpenStack network name the machine will be connected on. Conflicts with net_id (string)'
            network: '- (Optional) vSphere network where the docker VM will be attached (list)'
            network_data: '- (Optional) NetworkData content of cloud-init, base64 is supported (string)'
            network_info: '- (Required) A JSON string specifying info for the networks e.g. {\"interfaces\":[{\"networkName\":\"harvester-public/vlan1\"},{\"networkName\":\"harvester-public/vlan2\"}]} (string)'
            network_model: '- (Deprecated) Use network_info instead'
            network_name: '- (Deprecated) Use network_info instead'
            no_public_ip: '- (Optional) Do not create a public IP address for the machine. Default false (bool)'
            nova_network: '- (Optional) Use the nova networking services instead of neutron (string)'
            nsg: '- (Optional) Azure Network Security Group to assign this node to (accepts either a name or resource ID, default is to create a new NSG for each machine). Default docker-machine-nsg (string)'
            open_port: '- (Optional) Make the specified port number accessible from the Internet. (list)'
            openstack_config: '- (Optional) Openstack config for the Machine Config V2. Conflicts with amazonec2_config, azure_config, digitalocean_config, harvester_config, linode_config and vsphere_config (list maxitems:1)'
            password: '- (Optional/Sensitive) OpenStack password. Mandatory on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x (string)'
            pool: '- (Optional) vSphere resource pool for docker VM (string)'
            private_address_only: '- (Optional) Only use a private IP address. Default false (bool)'
            private_ip_address: '- (Optional) Specify a static private IP address for the machine. (string)'
            private_key_file: '- (Optional/Sensitive) Private key content to use for SSH (string)'
            private_networking: '- (Optional) Enable private networking for droplet. Default false (bool)'
            region: '- (Required) AWS region. (string)'
            request_spot_instance: '- (Optional) Set this flag to request spot instance. Default false (bool)'
            resource_group: '- (Optional) Azure Resource Group name (will be created if missing). Default docker-machine (string)'
            resource_version: '- (Computed) The machine config k8s resource version (string)'
            retries: '- (Optional) Set retry count for recoverable failures (use -1 to disable). Default 5 (string)'
            root_pass: '- (Optional/Sensitive) Root Password (string)'
            root_size: '- (Optional) AWS root disk size (in GB). Default 16 (string)'
            sec_groups: '- (Optional) OpenStack comma separated security groups for the machine (string)'
            security_group: '- (Required) AWS VPC security group. (list)'
            security_group_readonly: '- (Optional) Skip adding default rules to security groups (bool)'
            session_token: '- (Optional/Sensitive) AWS Session Token (string)'
            size: '- (Optional) Size for Azure Virtual Machine. Default Standard_A2 (string)'
            spot_price: '- (Optional) AWS spot instance bid price (in dollar). Default 0.50 (string)'
            ssh_key_contents: '- (Optional/Sensitive) SSH Key for Instance (string)'
            ssh_key_fingerprint: '- (Optional/Sensitive) SSH key fingerprint (string)'
            ssh_password: '- (Optional/Sensitive) SSH password (string)'
            ssh_port: '- (Optional) SSH port. Default 22 (string)'
            ssh_user: '- (Optional) Set the name of the ssh user (string)'
            ssh_user_group: '- (Optional) If using a non-B2D image the uploaded keys will need chown''ed. Default staff (string)'
            stackscript: '- (Optional) Specifies the Linode StackScript to use to create the instance. (string)'
            stackscript_data: '- (Optional) A JSON string specifying data for the selected StackScript. (string)'
            static_public_ip: '- (Optional) Assign a static public IP address to the machine. Default false (bool)'
            storage_type: '- (Optional) Type of Storage Account to host the OS Disk for the machine. Default Standard_LRS (string)'
            subnet: '- (Optional) Azure Subnet Name to be used within the Virtual Network. Default docker-machine (string)'
            subnet_id: '- (Required) AWS VPC subnet id (string)'
            subnet_prefix: '- (Optional) Private CIDR block to be used for the new subnet, should comply RFC 1918. Default 192.168.0.0/16 (string)'
            subscription_id: '- (Optional/Sensitive) Azure Subscription ID. Mandatory on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x (string)'
            swap_size: '- (Optional) Linode Instance Swap Size (MB). Default 512 (string)'
            tags: '- (Optional) AWS Tags (e.g. key1,value1,key2,value2) (string)'
            tenant_domain_id: '- (Required++) OpenStack tenant domain id. Conflicts with tenant_domain_name (string)'
            tenant_domain_name: '- (Required++) OpenStack tenant domain name. Conflicts with tenant_domain_id (string)'
            tenant_id: '- (Optional) Azure Tenant ID (string)'
            tenant_name: '- (Required++) OpenStack tenant name. Conflicts with tenant_id (string)'
            token: '- (Optional/Sensitive) Linode API token. Mandatory on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x (string)'
            ua_prefix: '- (Optional) Prefix the User-Agent in Linode API calls with some ''product/version'' (string)'
            update: '- (Default 10 minutes) Used for machine config modifications.'
            update_domain_count: '- (Optional) Update domain count to use for availability set. Default 5 (string)'
            use_ebs_optimized_instance: '- (Optional) Create an EBS optimized instance. Default false (bool)'
            use_private_address: '- (Optional) Force the usage of private IP address. Default false (bool)'
            use_private_ip: '- (Optional) Use private IP address of the machine to connect. Default false (bool)'
            user_data: '- (Optional) UserData content of cloud-init, base64 is supported. If the image does not contain the qemu-guest-agent package, you must install and start qemu-guest-agent using userdata (string)'
            user_data_file: '- (Optional) File containing an openstack userdata script (string)'
            user_domain_id: '- (Required++) OpenStack user domain id. Conflicts with user_domain_name (string)'
            user_domain_name: '- (Required++) OpenStack user domain name. Conflicts with user_domain_id (string)'
            userdata: '- (Optional) Path to file with cloud-init user data (string)'
            username: '- (Required++) OpenStack username (string)'
            vapp_ip_allocation_policy: '- (Optional) vSphere vApp IP allocation policy. Supported values are: dhcp, fixed, transient and fixedAllocated (string)'
            vapp_ip_protocol: '- (Optional) vSphere vApp IP protocol for this deployment. Supported values are: IPv4 and IPv6 (string)'
            vapp_property: '- (Optional) vSphere vApp properties (list)'
            vapp_transport: '- (Optional) vSphere OVF environment transports to use for properties. Supported values are: iso and com.vmware.guestInfo (string)'
            vcenter: '- (Optional/Sensitive) vSphere IP/hostname for vCenter (string)'
            vcenter_port: '- (Optional/Sensitive) vSphere Port for vCenter Default 443 (string)'
            vm_affinity: '- (Optional) Virtual machine affinity, only base64 format is supported. For Rancher v2.6.7 and above (string)'
            vm_namespace: '- (Required) Virtual machine namespace e.g. default (string)'
            vnet: '- (Optional) Azure Virtual Network name to connect the virtual machine (in [resourcegroup:]name format). Default docker-machine-vnet (string)'
            volume_device_path: '- (Optional) OpenStack volume device path (attaching). Applicable only when boot_from_volume is true. Omit for auto /dev/vdb. (string)'
            volume_id: '- (Optional) OpenStack volume id of existing volume. Applicable only when boot_from_volume is true (string)'
            volume_name: '- (Optional) OpenStack volume name of existing volume. Applicable only when boot_from_volume is true (string)'
            volume_size: '- (Optional) OpenStack volume size (GiB). Required when boot_from_volume is true (string)'
            volume_type: '- (Optional) Amazon EBS volume type. Default gp2 (string)'
            vpc_id: '- (Required) AWS VPC id. (string)'
            vsphere_config: '- (Optional) vSphere config for the Machine Config V2. Conflicts with amazonec2_config, azure_config, digitalocean_config, harvester_config, linode_config and openstack_config (list maxitems:1)'
            zone: '- (Required) AWS zone for instance (i.e. a,b,c,d,e) (string)'
        importStatements: []
    rancher2_multi_cluster_app:
        subCategory: ""
        name: rancher2_multi_cluster_app
        title: rancher2_multi_cluster_app Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "answers": [
                    {
                      "values": {
                        "ingress_host": "test.xip.io"
                      }
                    }
                  ],
                  "catalog_name": "\u003ccatalog_name\u003e",
                  "name": "foo",
                  "roles": [
                    "project-member"
                  ],
                  "targets": [
                    {
                      "project_id": "\u003cproject_id\u003e"
                    }
                  ],
                  "template_name": "\u003ctemplate_name\u003e",
                  "template_version": "\u003ctemplate_version\u003e"
                }
            - name: foo
              manifest: |-
                {
                  "answers": [
                    {
                      "values": {
                        "ingress_host": "test.xip.io"
                      }
                    },
                    {
                      "project_id": "\u003cproject_id2\u003e",
                      "values": {
                        "ingress_host": "test2.xip.io"
                      }
                    }
                  ],
                  "catalog_name": "\u003ccatalog_name\u003e",
                  "name": "foo",
                  "roles": [
                    "project-member"
                  ],
                  "targets": [
                    {
                      "project_id": "\u003cproject_id1\u003e"
                    },
                    {
                      "project_id": "\u003cproject_id2\u003e"
                    }
                  ],
                  "template_name": "\u003ctemplate_name\u003e",
                  "template_version": "\u003ctemplate_version\u003e"
                }
        argumentDocs:
            Add/Remove targets: ': If targets arguments is modified, the multi cluster app targets will be updated.'
            Rollback: ': If revision_id argument is provided or modified the app will be rolled back accordingly. A new revision_id will be generated in Rancher. It will also generate a non-empty terraform plan that will require manual .tf file intervention. Use carefully.'
            Update: ': If any other argument is modified the app will be upgraded.'
            access_type: '- (Optional) Member access type. Valid values: ["member" | "owner" | "read-only"] (string)'
            annotations: '- (Optional/Computed) Annotations for multi cluster app object (map)'
            answers: '- (Optional/Computed) The multi cluster app answers (list)'
            app_id: '- (Computed) App ID for target (string)'
            batch_size: '- (Optional) Rolling update batch size. Default 1 (int)'
            catalog_name: '- (Required) The multi cluster app catalog name (string)'
            cluster_id: '- (Optional) Cluster ID for answer (string)'
            create: '- (Default 10 minutes) Used for creating apps.'
            delete: '- (Default 10 minutes) Used for deleting apps.'
            group_principal_id: '- (Optional) Member group principal id (string)'
            health_state: '- (Computed) App health state for target (string)'
            id: '- (Computed) The ID of the resource (string)'
            interval: '- (Optional) Rolling update interval. Default 1 (int)'
            labels: '- (Optional/Computed) Labels for multi cluster app object (map)'
            members: '- (Optional) The multi cluster app answers (list)'
            name: '- (Required/ForceNew) The multi cluster app name (string)'
            project_id: '- (Required) Project ID for target (string)'
            revision_history_limit: '- (Computed) The multi cluster app revision history limit. Default 10 (int)'
            revision_id: '- (Optional/Computed) Current revision id for the multi cluster app (string)'
            roles: '- (Required) The multi cluster app roles (list)'
            rolling_update: '- (Optional) Upgrade strategy rolling update (list MaxItems:1)'
            state: '- (Computed) App state for target (string)'
            targets: '- (Required) The multi cluster app target projects (list)'
            template_name: '- (Required) The multi cluster app template name (string)'
            template_version: '- (Optional/Computed) The multi cluster app template version. Default: latest (string)'
            template_version_id: '- (Computed) The multi cluster app template version ID (string)'
            update: '- (Default 10 minutes) Used for app modifications.'
            upgrade_strategy: '- (Optional/Computed) The multi cluster app upgrade strategy (list MaxItems:1)'
            user_principal_id: '- (Optional) Member user principal id (string)'
            values: '- (Optional) Key/values for answer (map)'
            wait: '- (Optional) Wait until the multi cluster app is active. Default true (bool)'
        importStatements: []
    rancher2_namespace:
        subCategory: ""
        name: rancher2_namespace
        title: rancher2_namespace Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "container_resource_limit": [
                    {
                      "limits_cpu": "20m",
                      "limits_memory": "20Mi",
                      "requests_cpu": "1m",
                      "requests_memory": "1Mi"
                    }
                  ],
                  "description": "foo namespace",
                  "name": "foo",
                  "project_id": "\u003cPROJECT_ID\u003e",
                  "resource_quota": [
                    {
                      "limit": [
                        {
                          "limits_cpu": "100m",
                          "limits_memory": "100Mi",
                          "requests_storage": "1Gi"
                        }
                      ]
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "container_resource_limit": [
                    {
                      "limits_cpu": "20m",
                      "limits_memory": "20Mi",
                      "requests_cpu": "1m",
                      "requests_memory": "1Mi"
                    }
                  ],
                  "description": "foo namespace",
                  "name": "foo",
                  "project_id": "${rancher2_cluster.foo-custom.default_project_id}",
                  "resource_quota": [
                    {
                      "limit": [
                        {
                          "limits_cpu": "100m",
                          "limits_memory": "100Mi",
                          "requests_storage": "1Gi"
                        }
                      ]
                    }
                  ]
                }
              references:
                project_id: rancher2_cluster.foo-custom.default_project_id
              dependencies:
                rancher2_cluster.foo-custom: |-
                    {
                      "description": "Foo rancher2 custom cluster",
                      "name": "foo-custom",
                      "rke_config": [
                        {
                          "network": [
                            {
                              "plugin": "canal"
                            }
                          ]
                        }
                      ]
                    }
        argumentDocs:
            <id>: part is omitted <project_id>=<cluster_id>, the namespace'll not be assigned to any project. To move it into a project, <project_id>=<cluster_id>:<id> needs to be updated in tf file. Namespace movement is only supported inside same cluster_id.
            <project_id>=<cluster_id>:<id>: ', the namespace''ll be assigned to corresponding cluster project once it''s imported.'
            annotations: '- (Optional/Computed) Annotations for Node Pool object (map)'
            config_maps: '- (Optional) Limit for config maps in namespace (string)'
            container_resource_limit: '- (Optional) Default containers resource limits on namespace (List maxitem:1)'
            create: '- (Default 10 minutes) Used for creating namespaces.'
            delete: '- (Default 10 minutes) Used for deleting namespaces.'
            description: '- (Optional) A namespace description (string)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels for Node Pool object (map)'
            limit: '- (Required) Resource quota limit for namespace (list maxitems:1)'
            limits_cpu: '- (Optional) CPU limit for containers (string)'
            limits_memory: '- (Optional) Memory limit for containers (string)'
            name: '- (Required) The name of the namespace (string)'
            persistent_volume_claims: '- (Optional) Limit for persistent volume claims in namespace (string)'
            pods: '- (Optional) Limit for pods in namespace (string)'
            project_id: '- (Required) The project id where assign namespace. It''s on the form project_id=<cluster_id>:<id>. Updating <id> part on same <cluster_id> namespace will be moved between projects (string)'
            replication_controllers: '- (Optional) Limit for replication controllers in namespace (string)'
            requests_cpu: '- (Optional) CPU reservation for containers (string)'
            requests_memory: '- (Optional) Memory reservation for containers (string)'
            requests_storage: '- (Optional) Limit for requests storage in namespace (string)'
            resource_quota: '- (Optional/Computed) Resource quota for namespace. Rancher v2.1.x or higher (list maxitems:1)'
            secrets: '- (Optional) Limit for secrets in namespace (string)'
            services_load_balancers: '- (Optional) Limit for services load balancers in namespace (string)'
            services_node_ports: '- (Optional) Limit for services node ports in namespace (string)'
            update: '- (Default 10 minutes) Used for namespace modifications.'
            wait_for_cluster: '- (Optional) Wait for cluster becomes active. Default false (bool)'
        importStatements: []
    rancher2_node_driver:
        subCategory: ""
        name: rancher2_node_driver
        title: rancher2_node_driver Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "active": true,
                  "builtin": false,
                  "checksum": "0x0",
                  "description": "Foo description",
                  "external_id": "foo_external",
                  "name": "foo",
                  "ui_url": "local://ui",
                  "url": "local://",
                  "whitelist_domains": [
                    "*.foo.com"
                  ]
                }
        argumentDocs:
            active: '- (Required) Specify if the node driver state (bool)'
            annotations: '- (Optional/Computed) Annotations of the resource (map)'
            builtin: '- (Required) Specify wheter the node driver is an internal node driver or not (bool)'
            checksum: '- (Optional) Verify that the downloaded driver matches the expected checksum (string)'
            create: '- (Default 10 minutes) Used for creating node drivers.'
            delete: '- (Default 10 minutes) Used for deleting node drivers.'
            description: '- (Optional) Description of the node driver (string)'
            external_id: '- (Optional) External ID (string)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels of the resource (map)'
            name: '- (Required) Name of the node driver (string)'
            ui_url: '- (Optional) The URL to load for customized Add Nodes screen for this driver (string)'
            update: '- (Default 10 minutes) Used for node driver modifications.'
            url: '- (Required) The URL to download the machine driver binary for 64-bit Linux (string)'
            whitelist_domains: '- (Optional) Domains to whitelist for the ui (list)'
        importStatements: []
    rancher2_node_pool:
        subCategory: ""
        name: rancher2_node_pool
        title: rancher2_node_pool Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "cluster_id": "${rancher2_cluster.foo-custom.id}",
                  "control_plane": true,
                  "etcd": true,
                  "hostname_prefix": "foo-cluster-0",
                  "name": "foo",
                  "node_template_id": "${rancher2_node_template.foo.id}",
                  "quantity": 1,
                  "worker": true
                }
              references:
                cluster_id: rancher2_cluster.foo-custom.id
                node_template_id: rancher2_node_template.foo.id
              dependencies:
                rancher2_cloud_credential.foo: |-
                    {
                      "amazonec2_credential_config": [
                        {
                          "access_key": "XXXXXXXXXXXXXXXXXXXX",
                          "secret_key": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
                        }
                      ],
                      "description": "Terraform cloudCredential acceptance test",
                      "name": "foo"
                    }
                rancher2_cluster.foo-custom: |-
                    {
                      "description": "Foo rancher2 custom cluster",
                      "kind": "rke",
                      "name": "foo-custom",
                      "rke_config": [
                        {
                          "network": [
                            {
                              "plugin": "canal"
                            }
                          ]
                        }
                      ]
                    }
                rancher2_node_template.foo: |-
                    {
                      "amazonec2_config": [
                        {
                          "ami": "\u003cAMI_ID\u003e",
                          "region": "\u003cREGION\u003e",
                          "security_group": [
                            "\u003cAWS_SECURITY_GROUP\u003e"
                          ],
                          "subnet_id": "\u003cSUBNET_ID\u003e",
                          "vpc_id": "\u003cVPC_ID\u003e",
                          "zone": "\u003cZONE\u003e"
                        }
                      ],
                      "cloud_credential_id": "${rancher2_cloud_credential.foo.id}",
                      "description": "foo test",
                      "name": "foo"
                    }
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations for Node Pool object (map)'
            cluster_id: '- (Required/ForceNew) The RKE cluster id to use Node Pool (string)'
            control_plane: '- (Optional) RKE control plane role for created nodes (bool)'
            create: '- (Default 10 minutes) Used for creating node pools.'
            delete: '- (Default 10 minutes) Used for deleting node pools.'
            delete_not_ready_after_secs: '- (Optional) Delete not ready node after secs. For Rancher v2.3.3 and above. Default 0 (int)'
            drain_before_delete: '- (Optional) Drain nodes before delete. Default: false (bool)'
            effect: '- (Optional) Taint effect. Supported values : "NoExecute" | "NoSchedule" | "PreferNoSchedule" (string)'
            etcd: '- (Optional) RKE etcd role for created nodes (bool)'
            hostname_prefix: '- (Required) The prefix for created nodes of the Node Pool (string)'
            id: '- (Computed) The ID of the resource (string)'
            key: '- (Required) Taint key (string)'
            labels: '- (Optional/Computed) Labels for Node Pool object (map)'
            name: '- (Required/ForceNew) The name of the Node Pool (string)'
            node_taints: '- (Required) Node taints. For Rancher v2.3.3 and above (List)'
            node_template_id: '- (Required) The Node Template ID to use for node creation (string)'
            quantity: '- (Optional) The number of nodes to create on Node Pool. Default 1. Only values >= 1 allowed (int)'
            time_added: '- (Optional) Taint time added (string)'
            update: '- (Default 10 minutes) Used for node pool modifications.'
            value: '- (Required) Taint value (string)'
            worker: '- (Optional) RKE role role for created nodes (bool)'
        importStatements: []
    rancher2_node_template:
        subCategory: ""
        name: rancher2_node_template
        title: rancher2_node_template Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "amazonec2_config": [
                    {
                      "access_key": "AWS_ACCESS_KEY",
                      "ami": "\u003cAMI_ID\u003e",
                      "region": "\u003cREGION\u003e",
                      "secret_key": "\u003cAWS_SECRET_KEY\u003e",
                      "security_group": [
                        "\u003cAWS_SECURITY_GROUP\u003e"
                      ],
                      "subnet_id": "\u003cSUBNET_ID\u003e",
                      "vpc_id": "\u003cVPC_ID\u003e",
                      "zone": "\u003cZONE\u003e"
                    }
                  ],
                  "description": "foo test",
                  "name": "foo"
                }
            - name: foo
              manifest: |-
                {
                  "amazonec2_config": [
                    {
                      "ami": "\u003cAMI_ID\u003e",
                      "region": "\u003cREGION\u003e",
                      "security_group": [
                        "\u003cAWS_SECURITY_GROUP\u003e"
                      ],
                      "subnet_id": "\u003cSUBNET_ID\u003e",
                      "vpc_id": "\u003cVPC_ID\u003e",
                      "zone": "\u003cZONE\u003e"
                    }
                  ],
                  "cloud_credential_id": "${rancher2_cloud_credential.foo.id}",
                  "description": "foo test",
                  "name": "foo"
                }
              references:
                cloud_credential_id: rancher2_cloud_credential.foo.id
              dependencies:
                rancher2_cloud_credential.foo: |-
                    {
                      "amazonec2_credential_config": [
                        {
                          "access_key": "\u003cAWS_ACCESS_KEY\u003e",
                          "secret_key": "\u003cAWS_SECRET_KEY\u003e"
                        }
                      ],
                      "description": "foo test",
                      "name": "foo"
                    }
            - name: foo-harvester
              manifest: |-
                {
                  "cloud_credential_id": "${rancher2_cloud_credential.foo-harvester.id}",
                  "engine_install_url": "https://releases.rancher.com/install-docker/20.10.sh",
                  "harvester_config": [
                    {
                      "cpu_count": "2",
                      "disk_info": "    {\n        \"disks\": [{\n            \"imageName\": \"harvester-public/image-57hzg\",\n            \"size\": 40,\n            \"bootOrder\": 1\n        }]\n    }\n",
                      "memory_size": "4",
                      "network_info": "    {\n        \"interfaces\": [{\n            \"networkName\": \"harvester-public/vlan1\"\n        }]\n    }\n",
                      "ssh_user": "ubuntu",
                      "user_data": "    package_update: true\n    packages:\n      - qemu-guest-agent\n      - iptables\n    runcmd:\n      - - systemctl\n        - enable\n        - '--now'\n        - qemu-guest-agent.service\n",
                      "vm_namespace": "default"
                    }
                  ],
                  "name": "foo-harvester"
                }
              references:
                cloud_credential_id: rancher2_cloud_credential.foo-harvester.id
              dependencies:
                rancher2_cloud_credential.foo-harvester: |-
                    {
                      "harvester_credential_config": [
                        {
                          "cluster_id": "${data.rancher2_cluster_v2.foo-harvester.cluster_v1_id}",
                          "cluster_type": "imported",
                          "kubeconfig_content": "${data.rancher2_cluster_v2.foo-harvester.kube_config}"
                        }
                      ],
                      "name": "foo-harvester"
                    }
            - name: my_hetzner_node_template
              manifest: |-
                {
                  "driver_id": "${rancher2_node_driver.hetzner_node_driver.id}",
                  "hetzner_config": [
                    {
                      "api_token": "XXXXXXXXXX",
                      "image": "ubuntu-18.04",
                      "server_location": "nbg1",
                      "server_type": "cx11"
                    }
                  ],
                  "name": "my-hetzner-node-template"
                }
              references:
                driver_id: rancher2_node_driver.hetzner_node_driver.id
              dependencies:
                rancher2_node_driver.hetzner_node_driver: |-
                    {
                      "active": true,
                      "builtin": false,
                      "name": "Hetzner",
                      "ui_url": "https://storage.googleapis.com/hcloud-rancher-v2-ui-driver/component.js",
                      "url": "https://github.com/JonasProgrammer/docker-machine-driver-hetzner/releases/download/3.6.0/docker-machine-driver-hetzner_3.6.0_linux_amd64.tar.gz",
                      "whitelist_domains": [
                        "storage.googleapis.com"
                      ]
                    }
        argumentDocs:
            access_key: '- (Optional/Sensitive) AWS access key. Required on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x (string)'
            access_token: '- (Optional/Sensitive) Digital Ocean access token. Mandatory on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x (string)'
            active_timeout: '- (Optional) OpenStack active timeout Default 200 (string)'
            amazonec2_config: '- (Optional) AWS config for the Node Template (list maxitems:1)'
            ami: '- (Required) AWS machine image (string)'
            annotations: '- (Optional) Annotations for Node Template object (map)'
            api_token: '- (Required/Sensitive) Hetzner Cloud project API token (string)'
            application_credential_id: '- (Optional) OpenStack application credential id. Conflicts with application_credential_name (string)'
            application_credential_name: '- (Optional) OpenStack application credential name. Conflicts with application_credential_id (string)'
            application_credential_secret: '- (Optional) OpenStack application credential secret (string)'
            auth_certificate_authority: '- (Optional/Sensitive) Auth certificate authority for the Node Template (string)'
            auth_key: '- (Optional/Sensitive) Auth key for the Node Template (string)'
            auth_url: '- (Required) OpenStack authentication URL (string)'
            authorized_users: '- (Optional) Linode user accounts (seperated by commas) whose Linode SSH keys will be permitted root access to the created node. (string)'
            availability_set: '- (Optional) Azure Availability Set to place the virtual machine into. Default docker-machine (string)'
            availability_zone: '- (Required) OpenStack availability zone (string)'
            azure_config: '- (Optional) Azure config for the Node Template (list maxitems:1)'
            b2d_size: '- (Optional) Size of the Volatile disk in MB - only for b2d (string)'
            backups: '- (Optional) Enable backups for droplet. Default false (bool)'
            block_duration_minutes: '- (Optional) AWS spot instance duration in minutes (60, 120, 180, 240, 300, or 360). Default 0 (string)'
            boot_from_volume: '- (Optional) Enable booting from volume. Default is false (bool)'
            boot2docker_url: '- (Optional) vSphere URL for boot2docker iso image. Default https://releases.rancher.com/os/latest/rancheros-vmware.iso (string)'
            cacert: '- (Optional) CA certificate bundle to verify against (string)'
            cfgparam: '- (Optional) vSphere vm configuration parameters (used for guestinfo) (list)'
            client_id: '- (Optional/Sensitive) Azure Service Principal Account ID. Mandatory on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x (string)'
            client_secret: '- (Optional/Sensitive) Azure Service Principal Account password. Mandatory on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x (string)'
            clone_from: '- (Optional) If you choose creation type vm (clone vm) a name of what vm you want to clone is required. From Rancher v2.3.3 (string)'
            cloud_config: '- (Optional) Cloud Config YAML content to inject as user-data. From Rancher v2.3.3 (string)'
            cloud_credential_id: '- (Optional) Cloud credential ID for the Node Template. Required from Rancher v2.2.x (string)'
            cloudinit: '- (Optional) vSphere cloud-init file or url to set in the guestinfo (string)'
            config_drive: '- (Optional) Enables the OpenStack config drive for the instance. Default false (bool)'
            content_library: '- (Optional) If you choose to clone from a content library template specify the name of the library. From Rancher v2.3.3 (string)'
            cpu: '- (Optional) CPU value for the VM (string)'
            cpu_count: '- (Optional) CPU count, Default 2 (string)'
            create: '- (Default 10 minutes) Used for creating node templates.'
            create_private_ip: '- (Optional) Create private IP for the instance. Default false (bool)'
            creation_type: '- (Optional) Creation type when creating a new virtual machine. Supported values: vm, template, library, legacy. Default legacy. From Rancher v2.3.3 (string)'
            custom_attributes: '- (Optional) vSphere custom attributes, format key/value e.g. 200=my custom value. From Rancher v2.3.3 (List)'
            custom_data: '- (Optional) Path to file with custom-data (string)'
            datacenter: '- (Optional) vSphere datacenter for docker VM (string)'
            datastore: '- (Optional) vSphere datastore for docker VM (string)'
            datastore_cluster: '- (Optional) vSphere datastore cluster for virtual machine. From Rancher v2.3.3 (string)'
            delete: '- (Default 10 minutes) Used for deleting node templates.'
            description: '- (Optional) Description for the Node Template (string)'
            dev_prefix: '- (Optional) Dev prefix to use for the images. E.g.: ''vd'', ''sd'', ''hd'' (string)'
            device_name: '- (Optional) AWS root device name. Default /dev/sda1 (string)'
            digitalocean_config: '- (Optional) Digitalocean config for the Node Template (list maxitems:1)'
            disable_vnc: '- (Optional) VNC is enabled by default. Disable it with this flag (bool)'
            disk_bus: '- (Deprecated) Use disk_info instead'
            disk_info: '- (Required) A JSON string specifying info for the disks e.g. {\"disks\":[{\"imageName\":\"harvester-public/image-57hzg\",\"bootOrder\":1,\"size\":40},{\"storageClassName\":\"node-driver-test\",\"bootOrder\":2,\"size\":1}]} (string)'
            disk_resize: '- (Optional) Size of the disk for the VM in MB (string)'
            disk_size: '- (Optional) Disk size if using managed disk. For Rancher v2.3.x and above. Default 30 (string)'
            dns: '- (Optional) A unique DNS label for the public IP adddress (string)'
            docker_port: '- (Optional) Port number for Docker engine. Default 2376 (string)'
            domain_id: '- (Required**) OpenStack domain ID. Identity v3 only. Conflicts with domain_name (string)'
            domain_name: '- (Required**) OpenStack domain name. Identity v3 only. Conflicts with domain_id (string)'
            driver: '- (Computed) The driver of the node template (string)'
            driver_id: '- (Optional/Computed) The node driver id used by the node template. It''s required if the node driver isn''t built in Rancher (string)'
            effect: '- (Optional) Taint effect. Supported values : "NoExecute" | "NoSchedule" | "PreferNoSchedule" (string)'
            encrypt_ebs_volume: '- (Optional) Encrypt EBS volume. Default false (bool)'
            endpoint: '- (Optional) Optional endpoint URL (hostname only or fully qualified URI) (string)'
            endpoint_type: '- (Optional) OpenStack endpoint type. adminURL, internalURL or publicURL (string)'
            engine_env: '- (Optional) Engine environment for the node template (string)'
            engine_insecure_registry: '- (Optional) Insecure registry for the node template (list)'
            engine_install_url: '- (Optional/Computed) Docker engine install URL for the node template. Available install docker versions at https://github.com/rancher/install-docker (string)'
            engine_label: '- (Optional) Engine label for the node template (string)'
            engine_opt: '- (Optional) Engine options for the node template (map)'
            engine_registry_mirror: '- (Optional) Engine registry mirror for the node template (list)'
            engine_storage_driver: '- (Optional) Engine storage driver for the node template (string)'
            environment: '- (Optional) Azure environment (e.g. AzurePublicCloud, AzureChinaCloud). Default AzurePublicCloud (string)'
            extra_tags_all: '- (Optional) Extra tags for all created resources (e.g. key1=value1,key2=value2) (list)'
            extra_tags_instances: '- (Optional) Extra tags only for instances (e.g. key1=value1,key2=value2) (list)'
            fault_domain_count: '- (Optional) Fault domain count to use for availability set. Default 3 (string)'
            flavor_id: '- (Required*) OpenStack flavor id to use for the instance. Conflicts with flavor_name (string)'
            flavor_name: '- (Required*) OpenStack flavor name to use for the instance. Conflicts with flavor_id (string)'
            floating_ip_pool: '- (Optional) OpenStack floating IP pool to get an IP from to assign to the instance (string)'
            folder: '- (Optional) vSphere folder for the docker VM. This folder must already exist in the datacenter (string)'
            harvester_config: '- (Optional) Harvester config for the Node Template (list maxitems:1)'
            hetzner_config: '- (Optional) Hetzner config for the Node Template (list maxitems:1)'
            hostsystem: '- (Optional) vSphere compute resource where the docker VM will be instantiated. This can be omitted if using a cluster with DRS (string)'
            http_endpoint: '- (Optional) Enables or disables the HTTP metadata endpoint on your instances (string)'
            http_tokens: '- (Optional) The state of token usage for your instance metadata requests (string)'
            iam_instance_profile: '- (Optional) AWS IAM Instance Profile (string)'
            id: '- (Computed) The ID of the resource (string)'
            image: '- (Optional) Azure virtual machine OS image. Default canonical:ubuntu-24_04-lts:server-gen1:latest (string)'
            image_id: '- (Required*) Image ID to use as the VM OS. Conflicts with image_name (string)'
            image_name: '- (Deprecated) Use disk_info instead'
            image_owner: '- (Optional) Owner of the image to use as the VM OS (string)'
            insecure: '- (Optional) Disable TLS credential checking. Default false (bool)'
            insecure_transport: '- (Optional) Disable SSL when sending requests (bool)'
            instance_type: '- (Optional) AWS instance type. Default t2.micro (string)'
            ip_version: '- (Optional) OpenStack version of IP address assigned for the machine Default 4 (string)'
            ipv6: '- (Optional) Enable ipv6 for droplet. Default false (bool)'
            key: '- (Required) Taint key (string)'
            keypair_name: '- (Optional) OpenStack keypair to use to SSH to the instance (string)'
            kms_key: '- (Optional) Custom KMS key ID using the AWS Managed CMK (string)'
            label: '- (Optional) Linode Instance Label. (string)'
            labels: '- (Optional/Computed) Labels for Node Template object (map)'
            linode_config: '- (Optional) Linode config for the Node Template (list maxitems:1)'
            location: '- (Optional) Azure region to create the virtual machine. Default westus (string)'
            managed_disks: '- (Optional) Configures VM and availability set for managed disks. For Rancher v2.3.x and above. Default false (bool)'
            memory: '- (Optional) Size of the memory for the VM in MB (string)'
            memory_size: '- (Optional) Memory size (in GiB), Default 4 (string)'
            monitoring: '- (Optional) Set this flag to enable CloudWatch monitoring. Deafult false (bool)'
            name: '- (Required) The name of the Node Template (string)'
            net_id: '- (Required*) OpenStack network id the machine will be connected on. Conflicts with net_name (string)'
            net_name: '- (Required*) OpenStack network name the machine will be connected on. Conflicts with net_id (string)'
            network: '- (Optional) vSphere network where the docker VM will be attached (list)'
            network_data: '- (Optional) NetworkData content of cloud-init, base64 is supported (string)'
            network_id: '- (Optional) Opennebula network ID to connect the machine to. Conflicts with network_name (string)'
            network_info: '- (Required) A JSON string specifying info for the networks e.g. {\"interfaces\":[{\"networkName\":\"harvester-public/vlan1\"},{\"networkName\":\"harvester-public/vlan2\"}]} (string)'
            network_model: '- (Deprecated) Use network_info instead'
            network_name: '- (Deprecated) Use network_info instead'
            network_owner: '- (Optional) Opennebula user ID of the Network to connect the machine to (string)'
            networks: '- (Optional) Comma-separated list of network IDs or names which should be attached to the server private network interface (string)'
            no_public_ip: '- (Optional) Do not create a public IP address for the machine. Default false (bool)'
            node_taints: '- (Optional) Node taints. For Rancher v2.3.3 and above (List)'
            nova_network: '- (Optional) Use the nova networking services instead of neutron (string)'
            nsg: '- (Optional) Azure Network Security Group to assign this node to (accepts either a name or resource ID, default is to create a new NSG for each machine). Default docker-machine-nsg (string)'
            open_port: '- (Optional) Make the specified port number accessible from the Internet. (list)'
            opennebula_config: '- (Optional) Opennebula config for the Node Template (list maxitems:1)'
            openstack_config: '- (Optional) Openstack config for the Node Template (list maxitems:1)'
            outscale_config: '- (Optional) Outscale config for the Node Template (list maxitems:1)'
            password: '- (Required/Sensitive) Set the password for the XML-RPC API authentication (string)'
            plan: '- (Optional) Azure marketplace purchase plan for Azure Virtual Machine. Format is <publisher>:<product>:<plan>. For Rancher v2.6.3 and above. (string)'
            pool: '- (Optional) vSphere resource pool for docker VM (string)'
            private_address_only: '- (Optional) Only use a private IP address. Default false (bool)'
            private_ip_address: '- (Optional) Specify a static private IP address for the machine. (string)'
            private_key_file: '- (Optional/Sensitive) Private key content to use for SSH (string)'
            private_networking: '- (Optional) Enable private networking for droplet. Default false (bool)'
            region: '- (Required) AWS region. (string)'
            request_spot_instance: '- (Optional) Set this flag to request spot instance. Default false (bool)'
            resource_group: '- (Optional) Azure Resource Group name (will be created if missing). Default docker-machine (string)'
            retries: '- (Optional) Set retry count for recoverable failures (use -1 to disable). Default 5 (string)'
            root_disk_iops: '- (Optional) Iops for io1 Root Disk. From 1 to 13000.'
            root_disk_size: '- (Optional) Size of the Root Disk (in GB). From 1 to 14901.'
            root_disk_type: '- (Optional) Type of the Root Disk. Possible values are :''standard'', ''gp2'' or ''io1''.'
            root_pass: '- (Optional/Sensitive) Root Password (string)'
            root_size: '- (Optional) AWS root disk size (in GB). Default 16 (string)'
            sec_groups: '- (Optional) OpenStack comma separated security groups for the machine (string)'
            secret_key: '- (Optional/Sensitive) AWS secret key. Required on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x (string)'
            security_group: '- (Required) AWS VPC security group. (list)'
            security_group_ids: '- (Optional) Ids of user defined Security Groups to add to the machine. (list)'
            security_group_readonly: '- (Optional) Skip adding default rules to security groups (bool)'
            server_labels: '- (Optional) Map of the labels which will be assigned to the server. This argument is only available on Hetzner Docker Node Driver:v3.6.0 and above (map)'
            server_location: '- (Optional) Hetzner Cloud datacenter. Default nbg1 (string)'
            server_type: '- (Optional) Hetzner Cloud server type. Default cx11 (string)'
            session_token: '- (Optional/Sensitive) AWS Session Token (string)'
            size: '- (Optional) Size for Azure Virtual Machine. Default Standard_D2_v2 (string)'
            source_omi: '- (Optional) Outscale Machine Image to use as bootstrap for the VM. Default ami-2cf1fa3e (string)'
            spot_price: '- (Optional) AWS spot instance bid price (in dollar). Default 0.50 (string)'
            ssh_key_fingerprint: '- (Optional/Sensitive) SSH key fingerprint (string)'
            ssh_key_path: '- (Optional) SSH private key path (string)'
            ssh_password: '- (Optional/Sensitive) SSH password (string)'
            ssh_port: '- (Optional) SSH port. Default 22 (string)'
            ssh_user: '- (Optional) Set the name of the ssh user (string)'
            ssh_user_group: '- (Optional) If using a non-B2D image the uploaded keys will need chown''ed. Default staff. From Rancher v2.3.3 (string)'
            stackscript: '- (Optional) Specifies the Linode StackScript to use to create the instance. (string)'
            stackscript_data: '- (Optional) A JSON string specifying data for the selected StackScript. (string)'
            static_public_ip: '- (Optional) Assign a static public IP address to the machine. Default false (bool)'
            storage_type: '- (Optional) Type of Storage Account to host the OS Disk for the machine. Default Standard_LRS (string)'
            subnet: '- (Optional) Azure Subnet Name to be used within the Virtual Network. Default docker-machine (string)'
            subnet_id: '- (Required) AWS VPC subnet id (string)'
            subnet_prefix: '- (Optional) Private CIDR block to be used for the new subnet, should comply RFC 1918. Default 192.168.0.0/16 (string)'
            subscription_id: '- (Optional/Sensitive) Azure Subscription ID. Mandatory on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x (string)'
            swap_size: '- (Optional) Linode Instance Swap Size (MB). Default 512 (string)'
            tags: '- (Optional) AWS Tags (e.g. key1,value1,key2,value2) (string)'
            template_id: '- (Required*) Opennebula template ID to use. Conflicts with template_name (string)'
            template_name: '- (Required*) Name of the Opennbula template to use. Conflicts with template_id (string)'
            tenant_id: '- (Required**) OpenStack tenant id. Conflicts with tenant_name (string)'
            tenant_name: '- (Required**) OpenStack tenant name. Conflicts with tenant_id (string)'
            time_added: '- (Optional) Taint time added (string)'
            token: '- (Optional/Sensitive) Linode API token. Mandatory on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x (string)'
            ua_prefix: '- (Optional) Prefix the User-Agent in Linode API calls with some ''product/version'' (string)'
            update: '- (Default 10 minutes) Used for node template modifications.'
            update_domain_count: '- (Optional) Update domain count to use for availability set. Default 5 (string)'
            use_ebs_optimized_instance: '- (Optional) Create an EBS optimized instance. Default false (bool)'
            use_internal_ip_address: '- (Optional) Engine storage driver for the node template (bool)'
            use_private_address: '- (Optional) Force the usage of private IP address. Default false (bool)'
            use_private_ip: '- (Optional) Use private IP address of the machine to connect. Default false (bool)'
            use_private_network: '- (Optional) Use private network. Default false (bool)'
            user: '- (Required) Set the user for the XML-RPC API authentication (string)'
            user_data: '- (Optional) UserData content of cloud-init, base64 is supported. If the image does not contain the qemu-guest-agent package, you must install and start qemu-guest-agent using userdata (string)'
            user_data_file: '- (Optional) File containing an openstack userdata script (string)'
            userdata: '- (Optional) Path to file with cloud-init user data (string)'
            username: '- (Required**) OpenStack username (string)'
            value: '- (Required) Taint value (string)'
            vapp_ip_allocation_policy: '- (Optional) vSphere vApp IP allocation policy. Supported values are: dhcp, fixed, transient and fixedAllocated (string)'
            vapp_ip_protocol: '- (Optional) vSphere vApp IP protocol for this deployment. Supported values are: IPv4 and IPv6 (string)'
            vapp_property: '- (Optional) vSphere vApp properties (list)'
            vapp_transport: '- (Optional) vSphere OVF environment transports to use for properties. Supported values are: iso and com.vmware.guestInfo (string)'
            vcenter: '- (Optional/Sensitive) vSphere IP/hostname for vCenter. Mandatory on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x (string)'
            vcenter_port: '- (Optional/Sensitive) vSphere Port for vCenter. Mandatory on Rancher v2.0.x and v2.1.x. Use rancher2_cloud_credential from Rancher v2.2.x. Default 443 (string)'
            vcpu: '- (Optional) VCPUs for the VM (string)'
            vm_affinity: '- (Optional) Virtual machine affinity, only base64 format is supported. For Rancher v2.6.7 and above (string)'
            vm_namespace: '- (Required) Virtual machine namespace e.g. default (string)'
            vnet: '- (Optional) Azure Virtual Network name to connect the virtual machine (in [resourcegroup:]name format). Default docker-machine-vnet (string)'
            volume_device_path: '- (Optional) OpenStack volume device path (attaching). Applicable only when boot_from_volume is true. Omit for auto /dev/vdb. (string)'
            volume_id: '- (Optional) OpenStack volume id of existing volume. Applicable only when boot_from_volume is true (string)'
            volume_name: '- (Optional) OpenStack volume name of existing volume. Applicable only when boot_from_volume is true (string)'
            volume_size: '- (Optional) OpenStack volume size (GiB). Required when boot_from_volume is true (string)'
            volume_type: '- (Optional) Amazon EBS volume type. Default gp2 (string)'
            volumes: '- (Optional) Comma-separated list of volume IDs or names which should be attached to the server (string)'
            vpc_id: '- (Required) AWS VPC id. (string)'
            vsphere_config: '- (Optional) vSphere config for the Node Template (list maxitems:1)'
            xml_rpc_url: '- (Required) Set the url for the Opennebula XML-RPC API (string)'
            zone: '- (Required) AWS zone for instance (i.e. a,b,c,d,e) (string)'
        importStatements: []
    rancher2_project:
        subCategory: ""
        name: rancher2_project
        title: rancher2_project Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "cluster_id": "\u003cCLUSTER_ID\u003e",
                  "container_resource_limit": [
                    {
                      "limits_cpu": "20m",
                      "limits_memory": "20Mi",
                      "requests_cpu": "1m",
                      "requests_memory": "1Mi"
                    }
                  ],
                  "name": "foo",
                  "resource_quota": [
                    {
                      "namespace_default_limit": [
                        {
                          "limits_cpu": "2000m",
                          "limits_memory": "500Mi",
                          "requests_storage": "1Gi"
                        }
                      ],
                      "project_limit": [
                        {
                          "limits_cpu": "2000m",
                          "limits_memory": "2000Mi",
                          "requests_storage": "2Gi"
                        }
                      ]
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "cluster_id": "\u003cCLUSTER_ID\u003e",
                  "container_resource_limit": [
                    {
                      "limits_cpu": "20m",
                      "limits_memory": "20Mi",
                      "requests_cpu": "1m",
                      "requests_memory": "1Mi"
                    }
                  ],
                  "name": "foo",
                  "resource_quota": [
                    {
                      "namespace_default_limit": [
                        {
                          "limits_cpu": "2000m",
                          "limits_memory": "500Mi",
                          "requests_storage": "1Gi"
                        }
                      ],
                      "project_limit": [
                        {
                          "limits_cpu": "2000m",
                          "limits_memory": "2000Mi",
                          "requests_storage": "2Gi"
                        }
                      ]
                    }
                  ]
                }
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations for Node Pool object (map)'
            cluster_id: '- (Required) The cluster id where create project (string)'
            config_maps: '- (Optional) Limit for config maps in project (string)'
            container_resource_limit: '- (Optional) Default containers resource limits on project (List maxitem:1)'
            create: '- (Default 10 minutes) Used for creating projects.'
            delete: '- (Default 10 minutes) Used for deleting projects.'
            description: '- (Optional) A project description (string)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels for Node Pool object (map)'
            limits_cpu: '- (Optional) CPU limit for containers (string)'
            limits_memory: '- (Optional) Memory limit for containers (string)'
            name: '- (Required) The name of the project (string)'
            namespace_default_limit: '- (Required) Default resource quota limit for  namespaces in project (list maxitems:1)'
            persistent_volume_claims: '- (Optional) Limit for persistent volume claims in project (string)'
            pods: '- (Optional) Limit for pods in project (string)'
            project_limit: '- (Required) Resource quota limit for project (list maxitems:1)'
            replication_controllers: '- (Optional) Limit for replication controllers in project (string)'
            requests_cpu: '- (Optional) CPU reservation for containers (string)'
            requests_memory: '- (Optional) Memory reservation for containers (string)'
            requests_storage: '- (Optional) Limit for requests storage in project (string)'
            resource_quota: '- (Optional) Resource quota for project. Rancher v2.1.x or higher (list maxitems:1)'
            secrets: '- (Optional) Limit for secrets in project (string)'
            services_load_balancers: '- (Optional) Limit for services load balancers in project (string)'
            services_node_ports: '- (Optional) Limit for services node ports in project (string)'
            update: '- (Default 10 minutes) Used for project modifications.'
            wait_for_cluster: '- (Optional) Wait for cluster becomes active. Default false (bool)'
        importStatements: []
    rancher2_project_role_template_binding:
        subCategory: ""
        name: rancher2_project_role_template_binding
        title: rancher2_project_role_template_binding Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "name": "foo",
                  "project_id": "\u003cproject_id\u003e",
                  "role_template_id": "\u003crole_template_id\u003e",
                  "user_id": "\u003cuser_id\u003e"
                }
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations of the resource (map)'
            create: '- (Default 10 minutes) Used for creating project role template bindings.'
            delete: '- (Default 10 minutes) Used for deleting project role template bindings.'
            group_id: '- (Optional/Computed/ForceNew) The group ID to assign project role template binding (string)'
            group_principal_id: '- (Optional/Computed/ForceNew) The group_principal ID to assign project role template binding (string)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels of the resource (map)'
            name: '- (Required/ForceNew) The name of the project role template binding (string)'
            project_id: '- (Required/ForceNew) The project id where bind project role template, in format cluster_id:project_id, e.g. c-abc12:p-def34 (string)'
            role_template_id: '- (Required/ForceNew) The role template id from create project role template binding (string)'
            update: '- (Default 10 minutes) Used for project role template binding modifications.'
            user_id: '- (Optional/Computed/ForceNew) The user ID to assign project role template binding (string)'
            user_principal_id: '- (Optional/Computed/ForceNew) The user_principal ID to assign project role template binding (string)'
        importStatements: []
    rancher2_registry:
        subCategory: ""
        name: rancher2_registry
        title: rancher2_registry Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "Terraform registry foo",
                  "name": "foo",
                  "project_id": "\u003cproject_id\u003e",
                  "registries": [
                    {
                      "address": "test.io",
                      "password": "pass",
                      "username": "user"
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "description": "Terraform registry foo",
                  "name": "foo",
                  "namespace_id": "\u003cnamespace_id\u003e",
                  "project_id": "\u003cproject_id\u003e",
                  "registries": [
                    {
                      "address": "test.io",
                      "password": "pass",
                      "username": "user2"
                    }
                  ]
                }
        argumentDocs:
            address: '- (Required) Address for registry.'
            annotations: '- (Optional/Computed) Annotations for Registry object (map)'
            create: '- (Default 10 minutes) Used for creating registries.'
            delete: '- (Default 10 minutes) Used for deleting registries.'
            description: '- (Optional) A registry description (string)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels for Registry object (map)'
            name: '- (Required/ForceNew) The name of the registry (string)'
            namespace_id: in the project_id.
            password: '- (Optional) Password for the registry (string)'
            project_id: .
            registries: '- (Required) Registries data for registry (list)'
            update: '- (Default 10 minutes) Used for registry modifications.'
            username: '- (Optional) Username for the registry (string)'
        importStatements: []
    rancher2_role_template:
        subCategory: ""
        name: rancher2_role_template
        title: rancher2_role_template Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "context": "cluster",
                  "default_role": true,
                  "description": "Terraform role template acceptance test",
                  "name": "foo",
                  "rules": [
                    {
                      "api_groups": [
                        "*"
                      ],
                      "resources": [
                        "secrets"
                      ],
                      "verbs": [
                        "create"
                      ]
                    }
                  ]
                }
            - name: foo
              manifest: |-
                {
                  "context": "project",
                  "default_role": true,
                  "description": "Terraform role template acceptance test",
                  "name": "foo",
                  "rules": [
                    {
                      "api_groups": [
                        "*"
                      ],
                      "resources": [
                        "secrets"
                      ],
                      "verbs": [
                        "create"
                      ]
                    }
                  ]
                }
        argumentDocs:
            administrative: '- (Optional) Administrative role template. Default false (bool)'
            annotations: '- (Optional/Computed) Annotations for role template object (map)'
            api_groups: '- (Optional) Policy rule api groups (list)'
            builtin: '- (Computed) Builtin role template (string)'
            context: '- (Optional) Role template context. cluster and project values are supported. Default: cluster (string)'
            create: '- (Default 10 minutes) Used for creating role templates.'
            default_role: '- (Optional) Default role template for new created cluster or project. Default false (bool)'
            delete: '- (Default 10 minutes) Used for deleting role templates.'
            description: '- (Optional/Computed) Role template description (string)'
            external: '- (Optional) External role template. Default false (bool)'
            external_rules: '- (Optional/Computed) External rules used for authorization. This field is required when external=true and no underlying ClusterRole exists. (list)'
            hidden: '- (Optional) Hidden role template. Default false (bool)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels for role template object (map)'
            locked: '- (Optional) Locked role template. Default false (bool)'
            name: '- (Required) Role template name (string)'
            non_resource_urls: '- (Optional) Policy rule non resource urls (list)'
            resource_names: '- (Optional) Policy rule resource names (list)'
            resources: '- (Optional) Policy rule resources (list)'
            role_template_ids: '- (Optional/Computed) Inherit role template IDs (list)'
            rules: '- (Optional/Computed) Role template policy rules (list)'
            update: '- (Default 10 minutes) Used for role template modifications.'
            verbs: '- (Optional) Policy rule verbs. bind, create, delete, deletecollection, escalate, get, impersonate, list, manage-namespaces, patch, update, updatepsa, use, view, watch, own and * values are supported (list)'
        importStatements: []
    rancher2_secret:
        subCategory: ""
        name: rancher2_secret
        title: rancher2_secret Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "data": {
                    "address": "${base64encode(\"test.io\")}",
                    "password": "${base64encode(\"pass\")}",
                    "username": "${base64encode(\"user2\")}"
                  },
                  "description": "Terraform secret foo",
                  "name": "foo",
                  "project_id": "\u003cproject_id\u003e"
                }
            - name: foo
              manifest: |-
                {
                  "data": {
                    "address": "${base64encode(\"test.io\")}",
                    "password": "${base64encode(\"pass\")}",
                    "username": "${base64encode(\"user2\")}"
                  },
                  "description": "Terraform secret foo",
                  "name": "foo",
                  "namespace_id": "\u003cnamespace_id\u003e",
                  "project_id": "\u003cproject_id\u003e"
                }
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations for secret object (map)'
            create: '- (Default 10 minutes) Used for creating registries.'
            data: '- (Required/Sensitive) Secret key/value data. Base64 encoding required for values (map)'
            delete: '- (Default 10 minutes) Used for deleting registries.'
            description: '- (Optional) A secret description (string)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels for secret object (map)'
            name: '- (Optional/ForceNew) The name of the secret (string)'
            namespace_id: in the project_id
            project_id: '- (Required/ForceNew) The project id where to assign the secret (string)'
            update: '- (Default 10 minutes) Used for secret modifications.'
        importStatements: []
    rancher2_secret_v2:
        subCategory: ""
        name: rancher2_secret_v2
        title: rancher2_secret_v2 Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "cluster_id": "CLUSTER_ID",
                  "data": {
                    "mydata1": "data1",
                    "mydata2": "data2",
                    "mydata3": "data3"
                  },
                  "name": "foo"
                }
            - name: foo
              manifest: |-
                {
                  "cluster_id": "CLUSTER_ID",
                  "data": {
                    "password": "mysecret",
                    "username": "myuser"
                  },
                  "name": "foo",
                  "namespace": "mynamespace",
                  "type": "kubernetes.io/basic-auth"
                }
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations for the secret v2 (map)'
            cluster_id: '- (Required/ForceNew) The cluster id of the secret V2 (string)'
            create: '- (Default 10 minutes) Used for creating v2 secrets.'
            data: '- (Required/Sensitive) The data of the secret v2 (map)'
            delete: '- (Default 10 minutes) Used for deleting v2 secrets.'
            id: '- (Computed) The ID of the resource (string)'
            immutable: '- (Optional) If set to true, any secret update will remove and recreate the secret. This is a beta field enabled by k8s ImmutableEphemeralVolumes feature gate. Default: false (bool)'
            labels: '- (Optional/Computed) Labels for the secret v2 (map)'
            name: '- (Required) The name of the secret v2 (string)'
            namespace: '- (Optional/ForceNew) The namespaces of the secret v2. Default: default (string)'
            resource_version: '- (Computed) The k8s resource version (string)'
            type: '- (Optional) The type of the k8s secret, used to facilitate programmatic handling of secret data, More info about k8s secret types and expected format.  Default: Opaque (string)'
            update: '- (Default 10 minutes) Used for v2 secret modifications.'
        importStatements: []
    rancher2_setting:
        subCategory: ""
        name: rancher2_setting
        title: rancher2_setting Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "name": "foo",
                  "value": "\u003cVALUE\u003e"
                }
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations for setting object (map)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels for setting object (map)'
            name: '- (Required) The name of the setting (string)'
            value: '- (Required) The value of the setting (string)'
        importStatements: []
    rancher2_storage_class_v2:
        subCategory: ""
        name: rancher2_storage_class_v2
        title: rancher2_storage_class_v2 Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "cluster_id": "CLUSTER_ID",
                  "name": "foo",
                  "parameters": {
                    "gidAllocate": "true",
                    "gidMax": "50000",
                    "gidMin": "40000"
                  }
                }
        argumentDocs:
            allow_volume_expansion: '- (Optional/Computed) Is the provisioner of the storageClass v2 allowing volume expansion? (bool)'
            annotations: '- (Optional/Computed) Annotations for the storageClass v2 (map)'
            cluster_id: '- (Required/ForceNew) The cluster id of the storageClass V2 (string)'
            create: '- (Default 10 minutes) Used for creating v2 storageClasss.'
            delete: '- (Default 10 minutes) Used for deleting v2 storageClasss.'
            id: '- (Computed) The ID of the resource (string)'
            k8s_provisioner: '- (Required/ForceNew) The provisioner of the storageClass v2 (string)'
            labels: '- (Optional/Computed) Labels for the storageClass v2 (map)'
            mount_options: '- (Optional/Computed) The mount options for storageClass v2 (list)'
            name: '- (Required/ForceNew) The name of the storageClass v2 (string)'
            parameters: '- (Optional) The parameters for storageClass v2 (string)'
            reclaim_policy: '- (Optional/ForceNew) The reclaim policy for storageClass v2. Delete, Recycle and Retain values are allowed. Default: Delete (string)'
            resource_version: '- (Computed) The k8s resource version (string)'
            update: '- (Default 10 minutes) Used for v2 storageClass modifications.'
            volume_binding_mode: '- (Optional/ForceNew) The volume binding mode for storageClass v2. Immediate and WaitForFirstConsumer values are allowed. Default: Immediate (string)'
        importStatements: []
    rancher2_token:
        subCategory: ""
        name: rancher2_token
        title: rancher2_token Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "description": "foo token",
                  "ttl": 1200
                }
            - name: foo
              manifest: |-
                {
                  "cluster_id": "\u003ccluster-id\u003e",
                  "description": "foo token",
                  "ttl": 1200
                }
        argumentDocs:
            access_key: '- (Computed) Token access key part (string)'
            annotations: '- (Computed) Annotations of the token (map)'
            cluster_id: should be provided).
            create: '- (Default 5 minutes) Used for creating tokens.'
            delete: '- (Default 5 minutes) Used for deleting tokens.'
            description: '- (Optional/ForceNew) Token description (string)'
            enabled: '- (Computed) Token is enabled (bool)'
            expired: '- (Computed) Token is expired (bool)'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Computed) Labels of the token (map)'
            name: '- (Computed) Token name (string)'
            renew: '- (Optional/ForceNew) Renew token if expired or disabled. If true, a terraform diff would be generated to renew the token if it''s disabled or expired. If false, the token will not be renewed. Default true (bool)'
            secret_key: '- (Computed/Sensitive) Token secret key part (string)'
            token: '- (Computed/Sensitive) Token value (string)'
            ttl: '- (Optional/ForceNew) Token time to live in seconds. Default 0 (int)'
            update: '- (Default 5 minutes) Used for token modifications.'
            user_id: '- (Computed) Token user ID (string)'
        importStatements: []
    rancher2_user:
        subCategory: ""
        name: rancher2_user
        title: rancher2_user Resource
        examples:
            - name: foo
              manifest: |-
                {
                  "enabled": true,
                  "must_change_password": true,
                  "name": "Foo user",
                  "password": "changeme",
                  "username": "foo"
                }
              dependencies:
                rancher2_global_role_binding.foo: |-
                    {
                      "global_role_id": "user-base",
                      "name": "foo",
                      "user_id": "${rancher2_user.foo.id}"
                    }
        argumentDocs:
            annotations: '- (Optional/Computed) Annotations for global role binding (map)'
            create: '- (Default 5 minutes) Used for creating users.'
            delete: '- (Default 5 minutes) Used for deleting users.'
            id: '- (Computed) The ID of the resource (string)'
            labels: '- (Optional/Computed) Labels for global role binding (map)'
            must_change_password: '- (Optional)The user must change password at first login (bool)'
            name: '- (Optional) The user full name (string)'
            password: '- (Required/ForceNew) The user password (string)'
            principal_ids: '- (Computed) The user principal IDs (list)'
            update: '- (Default 5 minutes) Used for user modifications.'
            username: '- (Required/ForceNew) The user username (string)'
        importStatements: []
